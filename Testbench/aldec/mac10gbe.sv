// =============================================================================
// Generated by efx_ipmgr
// Version: 2024.2.294
// IP Version: 1.0
// =============================================================================

////////////////////////////////////////////////////////////////////////////////
// Copyright (C) 2013-2024 Efinix Inc. All rights reserved.              
//
// This   document  contains  proprietary information  which   is        
// protected by  copyright. All rights  are reserved.  This notice       
// refers to original work by Efinix, Inc. which may be derivitive       
// of other work distributed under license of the authors.  In the       
// case of derivative work, nothing in this notice overrides the         
// original author's license agreement.  Where applicable, the           
// original license agreement is included in it's original               
// unmodified form immediately below this header.                        
//                                                                       
// WARRANTY DISCLAIMER.                                                  
//     THE  DESIGN, CODE, OR INFORMATION ARE PROVIDED “AS IS” AND        
//     EFINIX MAKES NO WARRANTIES, EXPRESS OR IMPLIED WITH               
//     RESPECT THERETO, AND EXPRESSLY DISCLAIMS ANY IMPLIED WARRANTIES,  
//     INCLUDING, WITHOUT LIMITATION, THE IMPLIED WARRANTIES OF          
//     MERCHANTABILITY, NON-INFRINGEMENT AND FITNESS FOR A PARTICULAR    
//     PURPOSE.  SOME STATES DO NOT ALLOW EXCLUSIONS OF AN IMPLIED       
//     WARRANTY, SO THIS DISCLAIMER MAY NOT APPLY TO LICENSEE.           
//                                                                       
// LIMITATION OF LIABILITY.                                              
//     NOTWITHSTANDING ANYTHING TO THE CONTRARY, EXCEPT FOR BODILY       
//     INJURY, EFINIX SHALL NOT BE LIABLE WITH RESPECT TO ANY SUBJECT    
//     MATTER OF THIS AGREEMENT UNDER TORT, CONTRACT, STRICT LIABILITY   
//     OR ANY OTHER LEGAL OR EQUITABLE THEORY (I) FOR ANY INDIRECT,      
//     SPECIAL, INCIDENTAL, EXEMPLARY OR CONSEQUENTIAL DAMAGES OF ANY    
//     CHARACTER INCLUDING, WITHOUT LIMITATION, DAMAGES FOR LOSS OF      
//     GOODWILL, DATA OR PROFIT, WORK STOPPAGE, OR COMPUTER FAILURE OR   
//     MALFUNCTION, OR IN ANY EVENT (II) FOR ANY AMOUNT IN EXCESS, IN    
//     THE AGGREGATE, OF THE FEE PAID BY LICENSEE TO EFINIX HEREUNDER    
//     (OR, IF THE FEE HAS BEEN WAIVED, $100), EVEN IF EFINIX SHALL HAVE 
//     BEEN INFORMED OF THE POSSIBILITY OF SUCH DAMAGES.  SOME STATES DO 
//     NOT ALLOW THE EXCLUSION OR LIMITATION OF INCIDENTAL OR            
//     CONSEQUENTIAL DAMAGES, SO THIS LIMITATION AND EXCLUSION MAY NOT   
//     APPLY TO LICENSEE.                                                
//
////////////////////////////////////////////////////////////////////////////////

`define IP_UUID _a40854b2b1eb480f822c338562d7fdfc
`define IP_NAME_CONCAT(a,b) a``b
`define IP_MODULE_NAME(name) `IP_NAME_CONCAT(name,`IP_UUID)
module mac10gbe
(
    input mac_reset_n,
    input mac10gbe_clk,
    input init_clk,
    input init_rst_n,
    input PMA_CMN_READY,
    input PMA_XCVR_PLLCLK_EN_ACK,
    input [3:0] PMA_XCVR_POWER_STATE_ACK,
    input PMA_RX_SIGNAL_DETECT,
    output PMA_XCVR_PLLCLK_EN,
    output [3:0] PMA_XCVR_POWER_STATE_REQ,
    output phy_init_done,
    input [63:0] tx_axis_mac_tdata,
    input tx_axis_mac_tvalid,
    input tx_axis_mac_tlast,
    input [7:0] tx_axis_mac_tkeep,
    input tx_axis_mac_tuser,
    output tx_axis_mac_tready,
    output [63:0] rx_axis_mac_tdata,
    output rx_axis_mac_tvalid,
    output rx_axis_mac_tlast,
    output [7:0] rx_axis_mac_tkeep,
    output rx_axis_mac_tuser,
    input rx_pause_ignore,
    input tx_pause_gen,
    output tx_pause_busy,
    input [15:0] tx_pause_quant,
    input [47:0] rx_address_filtering_mask,
    input cnt_rst_n,
    output [31:0] cnt_tx_frame_transmitted_good,
    output [31:0] cnt_tx_frame_pause_mac_ctrl,
    output [31:0] cnt_tx_frame_error_txfifo_overflow,
    output [31:0] cnt_tx_frame_is_fe,
    output [31:0] cnt_rx_frame_received_good,
    output [31:0] cnt_rx_frame_error_fcs,
    output [31:0] cnt_rx_frame_pause_mac_ctrl,
    output [31:0] cnt_rx_frame_errors,
    output [31:0] cnt_rx_frame_received_total,
    output [31:0] cnt_rx_frame_undersized,
    output [31:0] cnt_rx_frame_oversized,
    output [31:0] cnt_rx_frame_mismatched_length,
    output [31:0] cnt_rx_frame_filtered_by_address,
    output [63:0] XGMII_TXD,
    output [7:0] XGMII_TXC,
    input [63:0] XGMII_RXD,
    input [7:0] XGMII_RXC,
    output [13:0] rpt_rx_frame_length
);
`IP_MODULE_NAME(efx_mac10gbe)
#(
    .CUT_THRU_STORE_FWD (1'b1),
    .INTER_PACKET_GAP (4'd12),
    .MTU_FRAME_LENGTH (14'd1518),
    .MAC_SOURCE_ADDRESS (48'd0),
    .ENABLE_BROADCAST_FILTER (1'b1),
    .TXFIFO_DEPTH (512),
    .DETECT_LINK_FAULT (1'b1)
)
u_efx_mac10gbe
(
    .mac_reset_n ( mac_reset_n ),
    .mac10gbe_clk ( mac10gbe_clk ),
    .init_clk ( init_clk ),
    .init_rst_n ( init_rst_n ),
    .PMA_CMN_READY ( PMA_CMN_READY ),
    .PMA_XCVR_PLLCLK_EN_ACK ( PMA_XCVR_PLLCLK_EN_ACK ),
    .PMA_XCVR_POWER_STATE_ACK ( PMA_XCVR_POWER_STATE_ACK ),
    .PMA_RX_SIGNAL_DETECT ( PMA_RX_SIGNAL_DETECT ),
    .PMA_XCVR_PLLCLK_EN ( PMA_XCVR_PLLCLK_EN ),
    .PMA_XCVR_POWER_STATE_REQ ( PMA_XCVR_POWER_STATE_REQ ),
    .phy_init_done ( phy_init_done ),
    .tx_axis_mac_tdata ( tx_axis_mac_tdata ),
    .tx_axis_mac_tvalid ( tx_axis_mac_tvalid ),
    .tx_axis_mac_tlast ( tx_axis_mac_tlast ),
    .tx_axis_mac_tkeep ( tx_axis_mac_tkeep ),
    .tx_axis_mac_tuser ( tx_axis_mac_tuser ),
    .tx_axis_mac_tready ( tx_axis_mac_tready ),
    .rx_axis_mac_tdata ( rx_axis_mac_tdata ),
    .rx_axis_mac_tvalid ( rx_axis_mac_tvalid ),
    .rx_axis_mac_tlast ( rx_axis_mac_tlast ),
    .rx_axis_mac_tkeep ( rx_axis_mac_tkeep ),
    .rx_axis_mac_tuser ( rx_axis_mac_tuser ),
    .rx_pause_ignore ( rx_pause_ignore ),
    .tx_pause_gen ( tx_pause_gen ),
    .tx_pause_busy ( tx_pause_busy ),
    .tx_pause_quant ( tx_pause_quant ),
    .rx_address_filtering_mask ( rx_address_filtering_mask ),
    .cnt_rst_n ( cnt_rst_n ),
    .cnt_tx_frame_transmitted_good ( cnt_tx_frame_transmitted_good ),
    .cnt_tx_frame_pause_mac_ctrl ( cnt_tx_frame_pause_mac_ctrl ),
    .cnt_tx_frame_error_txfifo_overflow ( cnt_tx_frame_error_txfifo_overflow ),
    .cnt_tx_frame_is_fe ( cnt_tx_frame_is_fe ),
    .cnt_rx_frame_received_good ( cnt_rx_frame_received_good ),
    .cnt_rx_frame_error_fcs ( cnt_rx_frame_error_fcs ),
    .cnt_rx_frame_pause_mac_ctrl ( cnt_rx_frame_pause_mac_ctrl ),
    .cnt_rx_frame_errors ( cnt_rx_frame_errors ),
    .cnt_rx_frame_received_total ( cnt_rx_frame_received_total ),
    .cnt_rx_frame_undersized ( cnt_rx_frame_undersized ),
    .cnt_rx_frame_oversized ( cnt_rx_frame_oversized ),
    .cnt_rx_frame_mismatched_length ( cnt_rx_frame_mismatched_length ),
    .cnt_rx_frame_filtered_by_address ( cnt_rx_frame_filtered_by_address ),
    .XGMII_TXD ( XGMII_TXD ),
    .XGMII_TXC ( XGMII_TXC ),
    .XGMII_RXD ( XGMII_RXD ),
    .XGMII_RXC ( XGMII_RXC ),
    .rpt_rx_frame_length ( rpt_rx_frame_length )
);
endmodule


// synopsys translate_off
`timescale 1 ns / 1 ps													
// synopsys translate_on

module `IP_MODULE_NAME(efx_resetsync) #(
    parameter ASYNC_STAGE = 2,
    parameter ACTIVE_LOW = 1
) (
    input  wire             clk,
    input  wire             reset,
    output wire             d_o
);


generate
   if (ACTIVE_LOW == 1) begin: active_low
      `IP_MODULE_NAME(efx_asyncreg) #(
         .WIDTH      (1),
         .ACTIVE_LOW (1),
         .RST_VALUE  (0)
      ) efx_resetsync_active_low (
         .clk     (clk),
         .reset_n (reset),
         .d_i     (1'b1),
         .d_o     (d_o)
      );
   end
   else begin: active_high
      `IP_MODULE_NAME(efx_asyncreg) #(
         .WIDTH      (1),
         .ACTIVE_LOW (0),
         .RST_VALUE  (1)
      ) efx_resetsync_active_high (
         .clk     (clk),
         .reset_n (reset),
         .d_i     (1'b0),
         .d_o     (d_o)
      );
   end
endgenerate

endmodule



// synopsys translate_off
`timescale 1 ns / 1 ps													
// synopsys translate_on

module `IP_MODULE_NAME(efx_asyncreg) #(
    parameter ASYNC_STAGE = 2,
    parameter WIDTH = 4,
    parameter ACTIVE_LOW = 1, // 0 - Active high reset, 1 - Active low reset
    parameter RST_VALUE = 0 
) (
    input  wire             clk,
    input  wire             reset_n,
    input  wire [WIDTH-1:0] d_i,
    output wire [WIDTH-1:0] d_o
);

(* async_reg = "true" *) reg [WIDTH-1:0] async_reg[ASYNC_STAGE-1:0];

assign d_o = async_reg[ASYNC_STAGE-1];

genvar i;
generate
   if (ACTIVE_LOW == 1) begin: active_low
      if (RST_VALUE == 0) begin: low_reset_0
         always @ (posedge clk or negedge reset_n) begin
             if(!reset_n) begin
                 async_reg[0]         <= {WIDTH{1'b0}};
             end
             else begin 
                 async_reg[0]         <= d_i;
             end
         end
             
         for (i=1; i<ASYNC_STAGE; i=i+1) begin
             always @ (posedge clk or negedge reset_n) begin
                 if(!reset_n) begin
                     async_reg[i]         <= {WIDTH{1'b0}};
                 end
                 else begin 
                     async_reg[i]         <= async_reg[i-1];
                 end
             end
         end
      end
      else begin: low_reset_1
         always @ (posedge clk or negedge reset_n) begin
             if(!reset_n) begin
                 async_reg[0]         <= {WIDTH{1'b1}};
             end
             else begin 
                 async_reg[0]         <= d_i;
             end
         end
             
         for (i=1; i<ASYNC_STAGE; i=i+1) begin
             always @ (posedge clk or negedge reset_n) begin
                 if(!reset_n) begin
                     async_reg[i]         <= {WIDTH{1'b1}};
                 end
                 else begin 
                     async_reg[i]         <= async_reg[i-1];
                 end
             end
         end
      end
   end
   else begin: active_high
      if (RST_VALUE == 0) begin: high_reset_0
         always @ (posedge clk or posedge reset_n) begin
             if(reset_n) begin
                 async_reg[0]         <= {WIDTH{1'b0}};
             end
             else begin 
                 async_reg[0]         <= d_i;
             end
         end
             
         for (i=1; i<ASYNC_STAGE; i=i+1) begin
             always @ (posedge clk or posedge reset_n) begin
                 if(reset_n) begin
                     async_reg[i]         <= {WIDTH{1'b0}};
                 end
                 else begin 
                     async_reg[i]         <= async_reg[i-1];
                 end
             end
         end
      end
      else begin: high_reset_1
         always @ (posedge clk or posedge reset_n) begin
             if(reset_n) begin
                 async_reg[0]         <= {WIDTH{1'b1}};
             end
             else begin 
                 async_reg[0]         <= d_i;
             end
         end
             
         for (i=1; i<ASYNC_STAGE; i=i+1) begin
             always @ (posedge clk or posedge reset_n) begin
                 if(reset_n) begin
                     async_reg[i]         <= {WIDTH{1'b1}};
                 end
                 else begin 
                     async_reg[i]         <= async_reg[i-1];
                 end
             end
         end
      end
   end
endgenerate

endmodule


////////////////////////////////////////////////////////////////////////////
//           _____       
//          / _______    Copyright (C) 2013-2020 Efinix Inc. All rights reserved.
//         / /       \   
//        / /  ..    /   bin2gray.v
//       / / .'     /    
//    __/ /.'      /     Description:
//   __   \       /      Binary to Gray Encoding Convertor
//  /_/ /\ \_____/ /     
// ____/  \_______/      
//
// *******************************
// Revisions:
// 1.0 Initial rev
//
// *******************************

`resetall
`timescale 1ns/1ps

module `IP_MODULE_NAME(efx_fifo_bin2gray)
#(parameter WIDTH=5)
(// outputs
 output wire [WIDTH-1:0] gray_o,
 // input
 input [WIDTH-1:0] bin_i
 );

//---------------------------------------------------------------------
// Function :   bit_xor
// Description: reduction xor
function bit_xor (
  input [31:0] nex_bit,
  input [31:0] curr_bit,
  input [WIDTH-1:0] xor_in);
  begin : fn_bit_xor
    bit_xor = xor_in[nex_bit] ^ xor_in[curr_bit];
  end
endfunction

// Convert Binary to Gray, bit by bit
generate 
begin
  genvar bit_idx;
  for(bit_idx=0; bit_idx<WIDTH-1; bit_idx=bit_idx+1) begin : gBinBits
    assign gray_o[bit_idx] = bit_xor(bit_idx+1, bit_idx, bin_i);
  end
  assign   gray_o[WIDTH-1] = bin_i[WIDTH-1];
end
endgenerate

endmodule 

////////////////////////////////////////////////////////////////////////////////
// Copyright (C) 2013-2020 Efinix Inc. All rights reserved.              
//
// This   document  contains  proprietary information  which   is        
// protected by  copyright. All rights  are reserved.  This notice       
// refers to original work by Efinix, Inc. which may be derivitive       
// of other work distributed under license of the authors.  In the       
// case of derivative work, nothing in this notice overrides the         
// original author's license agreement.  Where applicable, the           
// original license agreement is included in it's original               
// unmodified form immediately below this header.                        
//
// WARRANTY DISCLAIMER.                                                  
//     THE  DESIGN, CODE, OR INFORMATION ARE PROVIDED “AS IS” AND        
//     EFINIX MAKES NO WARRANTIES, EXPRESS OR IMPLIED WITH               
//     RESPECT THERETO, AND EXPRESSLY DISCLAIMS ANY IMPLIED WARRANTIES,  
//     INCLUDING, WITHOUT LIMITATION, THE IMPLIED WARRANTIES OF          
//     MERCHANTABILITY, NON-INFRINGEMENT AND FITNESS FOR A PARTICULAR    
//     PURPOSE.  SOME STATES DO NOT ALLOW EXCLUSIONS OF AN IMPLIED       
//     WARRANTY, SO THIS DISCLAIMER MAY NOT APPLY TO LICENSEE.           
//
// LIMITATION OF LIABILITY.                                              
//     NOTWITHSTANDING ANYTHING TO THE CONTRARY, EXCEPT FOR BODILY       
//     INJURY, EFINIX SHALL NOT BE LIABLE WITH RESPECT TO ANY SUBJECT    
//     MATTER OF THIS AGREEMENT UNDER TORT, CONTRACT, STRICT LIABILITY   
//     OR ANY OTHER LEGAL OR EQUITABLE THEORY (I) FOR ANY INDIRECT,      
//     SPECIAL, INCIDENTAL, EXEMPLARY OR CONSEQUENTIAL DAMAGES OF ANY    
//     CHARACTER INCLUDING, WITHOUT LIMITATION, DAMAGES FOR LOSS OF      
//     GOODWILL, DATA OR PROFIT, WORK STOPPAGE, OR COMPUTER FAILURE OR   
//     MALFUNCTION, OR IN ANY EVENT (II) FOR ANY AMOUNT IN EXCESS, IN    
//     THE AGGREGATE, OF THE FEE PAID BY LICENSEE TO EFINIX HEREUNDER    
//     (OR, IF THE FEE HAS BEEN WAIVED, $100), EVEN IF EFINIX SHALL HAVE 
//     BEEN INFORMED OF THE POSSIBILITY OF SUCH DAMAGES.  SOME STATES DO 
//     NOT ALLOW THE EXCLUSION OR LIMITATION OF INCIDENTAL OR            
//     CONSEQUENTIAL DAMAGES, SO THIS LIMITATION AND EXCLUSION MAY NOT   
//     APPLY TO LICENSEE.
//
////////////////////////////////////////////////////////////////////////////////


/////////////////////////////////////////////////////////////////////////////
//           _____       
//          / _______    Copyright (C) 2013-2021 Efinix Inc. All rights reserved.
//         / /       \   
//        / /  ..    /   simple_dual_port_ram_fifo.v
//       / / .'     /    
//    __/ /.'      /     Description:
//   __   \       /      EFX FIFO
//  /_/ /\ \_____/ /     
// ____/  \_______/      
//
// *******************************
// Revisions:
//
// *******************************

module `IP_MODULE_NAME(efx_fifo_ctl) # (
    parameter SYNC_CLK           = 1,
    parameter SYNC_STAGE         = 2,
    parameter MODE               = "STANDARD",
    parameter WR_DEPTH           = 512,
    parameter WADDR_WIDTH        = 9,
    parameter RADDR_WIDTH        = 9,
    parameter ASYM_WIDTH_RATIO   = 4,
    parameter RAM_MUX_RATIO      = 1,
    parameter PIPELINE_REG       = 1,
    parameter ALMOST_FLAG        = 1,
    parameter PROGRAMMABLE_FULL  = "NONE",
    parameter PROG_FULL_ASSERT   = 0,
    parameter PROG_FULL_NEGATE   = 0,
    parameter PROGRAMMABLE_EMPTY = "NONE",
    parameter PROG_EMPTY_ASSERT  = 0,
    parameter PROG_EMPTY_NEGATE  = 0,
    parameter OUTPUT_REG         = 0,
    parameter HANDSHAKE_FLAG     = 1, 
    parameter OVERFLOW_PROTECT   = 0,
    parameter UNDERFLOW_PROTECT  = 0
)(
    input   wire                   wr_rst,
    input   wire                   rd_rst,
    input   wire                   wclk,
    input   wire                   rclk,
    input   wire                   we,
    input   wire                   re,
    output  wire                   wr_full,
    output  reg                    wr_ack,
    output  wire                   wr_almost_full,
    output  wire                   rd_empty,
    output  wire                   rd_almost_empty,
    output  wire                   wr_prog_full,
    output  wire                   rd_prog_empty,
    output  wire                   wr_en_int,
    output  wire                   rd_en_int,
    output  wire [WADDR_WIDTH-1:0] waddr,
    output  wire [RADDR_WIDTH-1:0] raddr,
    output  wire [WADDR_WIDTH:0]   wr_datacount,
    output  wire [RADDR_WIDTH:0]   rd_datacount,
    output  wire                   rd_vld,
    output  reg                    wr_overflow,
    output  reg                    rd_underflow
);

reg  [WADDR_WIDTH:0] waddr_cntr;
reg  [WADDR_WIDTH:0] waddr_cntr_r;
reg  [RADDR_WIDTH:0] raddr_cntr;
reg                  rd_valid;

wire [WADDR_WIDTH:0] waddr_int;
wire [RADDR_WIDTH:0] raddr_int;
wire                 rd_empty_int;
wire [WADDR_WIDTH:0] wr_datacount_int;
wire [RADDR_WIDTH:0] rd_datacount_int;

assign waddr     = waddr_cntr[WADDR_WIDTH-1:0];
// NIC
wire [RADDR_WIDTH:0] ram_raddr;
assign raddr     = (MODE == "FWFT") ? ram_raddr[RADDR_WIDTH-1:0] : raddr_cntr[RADDR_WIDTH-1:0];
//assign raddr     = raddr_cntr[RADDR_WIDTH-1:0];
//assign wr_en_int = we & ~wr_full;
assign wr_en_int = OVERFLOW_PROTECT ? we & ~wr_full : we;

assign wr_datacount  = wr_datacount_int;
assign rd_datacount  = ASYM_WIDTH_RATIO == 4 && SYNC_CLK ? wr_datacount_int : rd_datacount_int;


generate
    if (MODE == "FWFT") begin    
        // NIC
        //assign rd_en_int     = (~rd_empty_int & rd_empty) | (re & ~rd_empty_int);
        //assign rd_empty      = rd_empty_fwft;

        assign rd_en_int     = 1'b1;
        //assign rd_empty      = rd_empty_int;
        
        //always @ (posedge rclk or posedge rd_rst) begin
        //    if (rd_rst) begin
        //        init_set <= 1'b1;
        //    end
        //    else if (~init_set & rd_empty) begin
        //        init_set <= 1'b1;            
        //    end
        //    else if (~rd_empty_int) begin
        //        init_set <= 1'b0;            
        //    end
        //    else if (rd_empty) begin
        //        init_set <= 1'b1;            
        //    end
        //end
        // NIC 
        //always @ (posedge rclk or posedge rd_rst) begin
        //    if (rd_rst) begin
        //        rd_empty_fwft <= 1'b1;
        //    end
        //    else if (rd_en_int) begin
        //        rd_empty_fwft <= 1'b0;            
        //    end
        //    else if (re) begin
        //        rd_empty_fwft <= 1'b1;            
        //    end
        //end          
        
        //if (FAMILY == "TRION") begin
        if (OUTPUT_REG) begin
            always @ (posedge rclk or posedge rd_rst) begin
                if (rd_rst) begin
                    rd_valid <= 1'b0;
                end
                else begin
                    rd_valid <= ~rd_empty;
                end
            end
            assign rd_vld = rd_valid;                
        end    
        else begin
            assign rd_vld = ~rd_empty;                
        end
        
        assign rd_empty = rd_empty_int;
    end
    else begin
        assign rd_en_int     = UNDERFLOW_PROTECT ? re & ~rd_empty_int : re;
        assign rd_empty      = rd_empty_int;
        
        if (OUTPUT_REG) begin
            reg rd_valid_r;
            always @ (posedge rclk or posedge rd_rst) begin
                if (rd_rst) begin
                    rd_valid_r <= 'h0;
                    rd_valid   <= 'h0;
                end
                else begin
                    {rd_valid,rd_valid_r} <= {rd_valid_r,rd_en_int};
                end
            end
            assign rd_vld = rd_valid;            
        end
        else begin
            always @ (posedge rclk or posedge rd_rst) begin
                if (rd_rst) begin
                    rd_valid  <= 'h0;
                end
                else begin
                    rd_valid <= rd_en_int;
                end
            end
            assign rd_vld = rd_valid;
        end
    end
    
    if (ALMOST_FLAG) begin
        assign wr_almost_full   = wr_datacount >= WR_DEPTH-1;
        assign rd_almost_empty  = rd_datacount <= 'd1;
    end
    else begin
        assign wr_almost_full   = 1'b0;
        assign rd_almost_empty  = 1'b0;        
    end
    
    if (PROGRAMMABLE_FULL == "STATIC_SINGLE") begin
        reg    wr_prog_full_int;
        assign wr_prog_full  = wr_datacount >= PROG_FULL_ASSERT;
        
        always @ (posedge wclk or posedge wr_rst) begin
            if (wr_rst) begin
                wr_prog_full_int  <= 1'b0;
            end
            else begin
                wr_prog_full_int  <= wr_prog_full;
            end
        end  
    end
    else if (PROGRAMMABLE_FULL == "STATIC_DUAL") begin
        reg    wr_prog_full_int;
        assign wr_prog_full  = wr_prog_full_int ? wr_datacount >= PROG_FULL_NEGATE : wr_datacount >= PROG_FULL_ASSERT;   

        always @ (posedge wclk or posedge wr_rst) begin
            if (wr_rst) begin
                wr_prog_full_int  <= 1'b0;
            end
            else begin
                wr_prog_full_int  <= wr_prog_full;
            end
        end              
    end
    else begin
        assign wr_prog_full  = 1'b0; 
    end
        
    if (PROGRAMMABLE_EMPTY == "STATIC_SINGLE") begin
        reg    rd_prog_empty_int;
        assign rd_prog_empty  = rd_datacount <= PROG_EMPTY_ASSERT;
            
        always @ (posedge rclk or posedge rd_rst) begin
            if (rd_rst) begin
                rd_prog_empty_int <= 1'b1;
            end
            else begin
                rd_prog_empty_int <= rd_prog_empty;
            end
        end
    end
    else if (PROGRAMMABLE_EMPTY == "STATIC_DUAL") begin
        reg    rd_prog_empty_int;
        assign rd_prog_empty = rd_prog_empty_int ? (rd_datacount <= PROG_EMPTY_NEGATE) : (rd_datacount <= PROG_EMPTY_ASSERT);
            
        always @ (posedge rclk or posedge rd_rst) begin
            if (rd_rst) begin
                rd_prog_empty_int <= 1'b1;
            end
            else begin
                rd_prog_empty_int <= rd_prog_empty;
            end
        end  
    end
    else begin
        assign rd_prog_empty  = 1'b0; 
    end
    
    if (HANDSHAKE_FLAG) begin
        always @ (posedge wclk or posedge wr_rst) begin
            if (wr_rst) begin
                wr_ack <= 1'b0;
            end
            else begin
                // NIC
                //wr_ack <= wr_en_int & ~wr_overflow;
                wr_ack <= OVERFLOW_PROTECT ? wr_en_int & ~wr_overflow : wr_en_int;
            end
        end
    end

    if (OVERFLOW_PROTECT) begin
        always @ (posedge wclk or posedge wr_rst) begin
            if (wr_rst) begin
                wr_overflow <= 1'b0;
            end
            else if (we && wr_full) begin
                wr_overflow <= 1'b1;
            end
            else begin
                wr_overflow <= 1'b0;            
            end
        end
    end
    else if (HANDSHAKE_FLAG) begin
        always @ (posedge wclk or posedge wr_rst) begin
            if (wr_rst) begin
                wr_overflow <= 1'b0;
            end
            else begin
                wr_overflow <= we && wr_full ? 1'b1 : wr_overflow;
            end
        end
    end

    if (UNDERFLOW_PROTECT) begin     
        always @ (posedge rclk or posedge rd_rst) begin
            if (rd_rst) begin
                rd_underflow <= 1'b0;
            end
            else if (re && rd_empty) begin
                rd_underflow <= 1'b1;
            end
            else begin
                rd_underflow <= 1'b0;            
            end
        end
    end
    else if (HANDSHAKE_FLAG) begin
        always @ (posedge rclk or posedge rd_rst) begin
            if (rd_rst) begin
                rd_underflow <= 1'b0;
            end
            else begin
                rd_underflow <= re && rd_empty ? 1'b1 : rd_underflow;
            end
        end
    end
    
    localparam RATIO_WIDTH = (RADDR_WIDTH >= WADDR_WIDTH)? RADDR_WIDTH - WADDR_WIDTH : WADDR_WIDTH - RADDR_WIDTH;
    
    if (ASYM_WIDTH_RATIO < 4) begin
        assign wr_full          = (waddr_cntr[WADDR_WIDTH]^raddr_int[RADDR_WIDTH]) & (waddr_cntr[WADDR_WIDTH-1:0] == raddr_int[RADDR_WIDTH-1:RATIO_WIDTH]);
        assign rd_empty_int     = waddr_int[WADDR_WIDTH:0] == raddr_cntr[RADDR_WIDTH:RATIO_WIDTH];
        assign wr_datacount_int = waddr_cntr - (raddr_int/RAM_MUX_RATIO);
        assign rd_datacount_int = (waddr_int*RAM_MUX_RATIO)-raddr_cntr;
    end
    // NIC
    else if (ASYM_WIDTH_RATIO == 4) begin
        assign wr_full          = (waddr_cntr[WADDR_WIDTH]^raddr_int[RADDR_WIDTH]) & (waddr_cntr[WADDR_WIDTH-1:0] == raddr_int[RADDR_WIDTH-1:0]);
        assign rd_empty_int     = waddr_int[WADDR_WIDTH:0] == raddr_cntr[RADDR_WIDTH:0];
        assign wr_datacount_int = waddr_cntr - raddr_int;
        assign rd_datacount_int = waddr_int - raddr_cntr;
    end
    else begin
        assign wr_full          = (waddr_cntr[WADDR_WIDTH]^raddr_int[RADDR_WIDTH]) & (waddr_cntr[WADDR_WIDTH-1:RATIO_WIDTH] == raddr_int[RADDR_WIDTH-1:0]);
        // NIC
        //assign rd_empty_int     = (waddr_int- raddr_cntr*RAM_MUX_RATIO) < RAM_MUX_RATIO;
        assign rd_empty_int     = waddr_int[WADDR_WIDTH:RATIO_WIDTH] == raddr_cntr[RADDR_WIDTH:0];
        assign wr_datacount_int = waddr_cntr - (raddr_int*RAM_MUX_RATIO);
        assign rd_datacount_int = (waddr_int/RAM_MUX_RATIO)-raddr_cntr;
    end
endgenerate

always @ (posedge wclk or posedge wr_rst) begin
    if (wr_rst) begin
        waddr_cntr   <= 'h0;
    end
    else if (wr_en_int) begin
        waddr_cntr   <= waddr_cntr + 1'b1;
    end
end

always @ (posedge wclk or posedge wr_rst) begin
    if (wr_rst) begin
        waddr_cntr_r  <= 'h0;
    end
    else begin
        waddr_cntr_r  <= waddr_cntr;
    end
end

always @ (posedge rclk or posedge rd_rst) begin
    if (rd_rst) begin
        raddr_cntr   <= 'h0;
    end
    // NIC
    //else if (rd_en_int) begin
    else begin
        //raddr_cntr   <= raddr_cntr + 1'b1;
        //raddr_cntr   <= raddr_cntr + (re & ~rd_empty_int);
        raddr_cntr   <= ram_raddr;
    end
end
// NIC
assign ram_raddr = raddr_cntr + (UNDERFLOW_PROTECT ? re & ~rd_empty_int : re);


generate
    if (SYNC_CLK) begin : sync_clk
       if (MODE == "FWFT") begin
          assign waddr_int = waddr_cntr_r;
          assign raddr_int        = raddr_cntr;
       end
       else begin
          assign waddr_int        = waddr_cntr;
          assign raddr_int        = raddr_cntr;
       end
    end
    else begin : async_clk
        reg  [RADDR_WIDTH:0] raddr_cntr_gry_r;
        reg  [WADDR_WIDTH:0] waddr_cntr_gry_r;
        
        wire [RADDR_WIDTH:0] raddr_cntr_gry;
        wire [RADDR_WIDTH:0] raddr_cntr_gry_sync;
        wire [RADDR_WIDTH:0] raddr_cntr_sync_g2b;
        wire [WADDR_WIDTH:0] waddr_cntr_gry;
        wire [WADDR_WIDTH:0] waddr_cntr_gry_sync;
        wire [WADDR_WIDTH:0] waddr_cntr_sync_g2b;

        if (PIPELINE_REG) begin
            reg  [RADDR_WIDTH:0] raddr_cntr_sync_g2b_r;    
            reg  [WADDR_WIDTH:0] waddr_cntr_sync_g2b_r;        
        
            assign waddr_int        = waddr_cntr_sync_g2b_r;
            assign raddr_int        = raddr_cntr_sync_g2b_r;
            
            always @ (posedge wclk or posedge wr_rst) begin
                if (wr_rst) begin
                    raddr_cntr_sync_g2b_r <= 'h0;
                end
                else begin
                    raddr_cntr_sync_g2b_r <= raddr_cntr_sync_g2b;
                end
            end
            
            always @ (posedge rclk or posedge rd_rst) begin
                if (rd_rst) begin
                    waddr_cntr_sync_g2b_r <= 'h0;
                end
                else begin
                    waddr_cntr_sync_g2b_r <= waddr_cntr_sync_g2b;
                end
            end
        end
        else begin
            assign waddr_int        = waddr_cntr_sync_g2b;
            assign raddr_int        = raddr_cntr_sync_g2b;        
        end
      
        always @ (posedge rclk or posedge rd_rst) begin
            if (rd_rst) begin
                raddr_cntr_gry_r <= 'h0;
            end
            else begin
                raddr_cntr_gry_r <= raddr_cntr_gry;
            end
        end
        `IP_MODULE_NAME(efx_fifo_bin2gray) # (.WIDTH(RADDR_WIDTH+1)                                           ) xrd2wr_bin2gray    (.bin_i(raddr_cntr), .gray_o(raddr_cntr_gry));
        `IP_MODULE_NAME(efx_asyncreg)      # (.ASYNC_STAGE(SYNC_STAGE), .WIDTH (RADDR_WIDTH+1), .ACTIVE_LOW(0)) xrd2wr_addr_sync   (.clk(wclk), .reset_n(wr_rst), .d_i(raddr_cntr_gry_r), .d_o(raddr_cntr_gry_sync));
        `IP_MODULE_NAME(efx_fifo_gray2bin) # (.WIDTH(RADDR_WIDTH+1)                                           ) xrd2wr_gray2bin    (.gray_i(raddr_cntr_gry_sync), .bin_o(raddr_cntr_sync_g2b));
        
        always @ (posedge wclk or posedge wr_rst) begin
            if (wr_rst) begin
                waddr_cntr_gry_r <= 'h0;
            end
            else begin
                waddr_cntr_gry_r <= waddr_cntr_gry;
            end
        end        
        `IP_MODULE_NAME(efx_fifo_bin2gray) # (.WIDTH(WADDR_WIDTH+1)                                           ) wr2rd_bin2gray  (.bin_i(waddr_cntr), .gray_o(waddr_cntr_gry));
        `IP_MODULE_NAME(efx_asyncreg)      # (.ASYNC_STAGE(SYNC_STAGE), .WIDTH (WADDR_WIDTH+1), .ACTIVE_LOW(0)) wr2rd_addr_sync (.clk(rclk), .reset_n(rd_rst), .d_i(waddr_cntr_gry_r), .d_o(waddr_cntr_gry_sync));
        `IP_MODULE_NAME(efx_fifo_gray2bin) # (.WIDTH(WADDR_WIDTH+1)                                           ) wr2rd_gray2bin  (.gray_i(waddr_cntr_gry_sync), .bin_o(waddr_cntr_sync_g2b));        

    end
endgenerate
endmodule


////////////////////////////////////////////////////////////////////////////
//           _____       
//          / _______    Copyright (C) 2013-2020 Efinix Inc. All rights reserved.
//         / /       \   
//        / /  ..    /   pipe_reg.v
//       / / .'     /    
//    __/ /.'      /     Description:
//   __   \       /      Parallel Pipelining Shift Register
//  /_/ /\ \_____/ /     
// ____/  \_______/      
//
// *******************************
// Revisions:
// 1.0 Initial rev
//
// *******************************

module `IP_MODULE_NAME(efx_fifo_datasync) #(
    parameter STAGE = 32,
    parameter WIDTH = 4
) (
 input  wire             clk_i,
 input  wire [WIDTH-1:0] d_i,
 output wire [WIDTH-1:0] d_o
);

(* async_reg = "true" *) reg [WIDTH-1:0] pipe_reg [STAGE-1:0];
integer i;

always @(posedge clk_i) begin
  for (i=STAGE-1; i>0; i = i - 1) begin
    pipe_reg[i] <= pipe_reg[i-1];
  end
  pipe_reg[0] <= d_i;
end
assign d_o = pipe_reg[STAGE-1];
   

endmodule

////////////////////////////////////////////////////////////////////////////////
// Copyright (C) 2013-2020 Efinix Inc. All rights reserved.              
//
// This   document  contains  proprietary information  which   is        
// protected by  copyright. All rights  are reserved.  This notice       
// refers to original work by Efinix, Inc. which may be derivitive       
// of other work distributed under license of the authors.  In the       
// case of derivative work, nothing in this notice overrides the         
// original author's license agreement.  Where applicable, the           
// original license agreement is included in it's original               
// unmodified form immediately below this header.                        
//
// WARRANTY DISCLAIMER.                                                  
//     THE  DESIGN, CODE, OR INFORMATION ARE PROVIDED “AS IS” AND        
//     EFINIX MAKES NO WARRANTIES, EXPRESS OR IMPLIED WITH               
//     RESPECT THERETO, AND EXPRESSLY DISCLAIMS ANY IMPLIED WARRANTIES,  
//     INCLUDING, WITHOUT LIMITATION, THE IMPLIED WARRANTIES OF          
//     MERCHANTABILITY, NON-INFRINGEMENT AND FITNESS FOR A PARTICULAR    
//     PURPOSE.  SOME STATES DO NOT ALLOW EXCLUSIONS OF AN IMPLIED       
//     WARRANTY, SO THIS DISCLAIMER MAY NOT APPLY TO LICENSEE.           
//
// LIMITATION OF LIABILITY.                                              
//     NOTWITHSTANDING ANYTHING TO THE CONTRARY, EXCEPT FOR BODILY       
//     INJURY, EFINIX SHALL NOT BE LIABLE WITH RESPECT TO ANY SUBJECT    
//     MATTER OF THIS AGREEMENT UNDER TORT, CONTRACT, STRICT LIABILITY   
//     OR ANY OTHER LEGAL OR EQUITABLE THEORY (I) FOR ANY INDIRECT,      
//     SPECIAL, INCIDENTAL, EXEMPLARY OR CONSEQUENTIAL DAMAGES OF ANY    
//     CHARACTER INCLUDING, WITHOUT LIMITATION, DAMAGES FOR LOSS OF      
//     GOODWILL, DATA OR PROFIT, WORK STOPPAGE, OR COMPUTER FAILURE OR   
//     MALFUNCTION, OR IN ANY EVENT (II) FOR ANY AMOUNT IN EXCESS, IN    
//     THE AGGREGATE, OF THE FEE PAID BY LICENSEE TO EFINIX HEREUNDER    
//     (OR, IF THE FEE HAS BEEN WAIVED, $100), EVEN IF EFINIX SHALL HAVE 
//     BEEN INFORMED OF THE POSSIBILITY OF SUCH DAMAGES.  SOME STATES DO 
//     NOT ALLOW THE EXCLUSION OR LIMITATION OF INCIDENTAL OR            
//     CONSEQUENTIAL DAMAGES, SO THIS LIMITATION AND EXCLUSION MAY NOT   
//     APPLY TO LICENSEE.
//
////////////////////////////////////////////////////////////////////////////////


/////////////////////////////////////////////////////////////////////////////
//           _____       
//          / _______    Copyright (C) 2013-2020 Efinix Inc. All rights reserved.
//         / /       \   
//        / /  ..    /   gray2bin.v
//       / / .'     /    
//    __/ /.'      /     Description:
//   __   \       /      Gray to Binary Encoding Convertor
//  /_/ /\ \_____/ /     
// ____/  \_______/      
//
// *******************************
// Revisions:
// 1.0 Initial rev
//
// *******************************

`resetall
`timescale 1ns/1ps

module `IP_MODULE_NAME(efx_fifo_gray2bin)
#(parameter WIDTH=5)
(// outputs
 output wire [WIDTH-1:0] bin_o,
 // input
 input [WIDTH-1:0] gray_i);

//---------------------------------------------------------------------
// Recursive Module
// Description: reduction xor
generate
   if (WIDTH > 1) begin
      wire [1:0] bin_1;
      assign bin_1 = {gray_i[WIDTH-1], gray_i[WIDTH-1]^gray_i[WIDTH-2]};
      if (WIDTH == 2) begin
	 assign bin_o = bin_1;
      end
      else begin
	 assign bin_o[WIDTH-1] = bin_1[1];
	 `IP_MODULE_NAME(efx_fifo_gray2bin) #(.WIDTH(WIDTH-1)) u_gray2bin (.bin_o(bin_o[WIDTH-2:0]), .gray_i({bin_1[0], gray_i[WIDTH-3:0]}));
      end
   end
   else /* if (WIDTH == 1) */
     assign bin_o = gray_i;
endgenerate
   
endmodule 

////////////////////////////////////////////////////////////////////////////////
// Copyright (C) 2013-2020 Efinix Inc. All rights reserved.              
//
// This   document  contains  proprietary information  which   is        
// protected by  copyright. All rights  are reserved.  This notice       
// refers to original work by Efinix, Inc. which may be derivitive       
// of other work distributed under license of the authors.  In the       
// case of derivative work, nothing in this notice overrides the         
// original author's license agreement.  Where applicable, the           
// original license agreement is included in it's original               
// unmodified form immediately below this header.                        
//
// WARRANTY DISCLAIMER.                                                  
//     THE  DESIGN, CODE, OR INFORMATION ARE PROVIDED “AS IS” AND        
//     EFINIX MAKES NO WARRANTIES, EXPRESS OR IMPLIED WITH               
//     RESPECT THERETO, AND EXPRESSLY DISCLAIMS ANY IMPLIED WARRANTIES,  
//     INCLUDING, WITHOUT LIMITATION, THE IMPLIED WARRANTIES OF          
//     MERCHANTABILITY, NON-INFRINGEMENT AND FITNESS FOR A PARTICULAR    
//     PURPOSE.  SOME STATES DO NOT ALLOW EXCLUSIONS OF AN IMPLIED       
//     WARRANTY, SO THIS DISCLAIMER MAY NOT APPLY TO LICENSEE.           
//
// LIMITATION OF LIABILITY.                                              
//     NOTWITHSTANDING ANYTHING TO THE CONTRARY, EXCEPT FOR BODILY       
//     INJURY, EFINIX SHALL NOT BE LIABLE WITH RESPECT TO ANY SUBJECT    
//     MATTER OF THIS AGREEMENT UNDER TORT, CONTRACT, STRICT LIABILITY   
//     OR ANY OTHER LEGAL OR EQUITABLE THEORY (I) FOR ANY INDIRECT,      
//     SPECIAL, INCIDENTAL, EXEMPLARY OR CONSEQUENTIAL DAMAGES OF ANY    
//     CHARACTER INCLUDING, WITHOUT LIMITATION, DAMAGES FOR LOSS OF      
//     GOODWILL, DATA OR PROFIT, WORK STOPPAGE, OR COMPUTER FAILURE OR   
//     MALFUNCTION, OR IN ANY EVENT (II) FOR ANY AMOUNT IN EXCESS, IN    
//     THE AGGREGATE, OF THE FEE PAID BY LICENSEE TO EFINIX HEREUNDER    
//     (OR, IF THE FEE HAS BEEN WAIVED, $100), EVEN IF EFINIX SHALL HAVE 
//     BEEN INFORMED OF THE POSSIBILITY OF SUCH DAMAGES.  SOME STATES DO 
//     NOT ALLOW THE EXCLUSION OR LIMITATION OF INCIDENTAL OR            
//     CONSEQUENTIAL DAMAGES, SO THIS LIMITATION AND EXCLUSION MAY NOT   
//     APPLY TO LICENSEE.
//
////////////////////////////////////////////////////////////////////////////////


/////////////////////////////////////////////////////////////////////////////
//           _____       
//          / _______    Copyright (C) 2013-2021 Efinix Inc. All rights reserved.
//         / /       \   
//        / /  ..    /   simple_dual_port_ram_fifo.v
//       / / .'     /    
//    __/ /.'      /     Description:
//   __   \       /      EFX FIFO
//  /_/ /\ \_____/ /     
// ____/  \_______/      
//
// *******************************
// Revisions:
//
// *******************************

module `IP_MODULE_NAME(efx_fifo_ram) #(
    parameter FAMILY        = "TRION",
    parameter WR_DEPTH      = 512,
    parameter RD_DEPTH      = 512,
    parameter WDATA_WIDTH   = 8,
    parameter RDATA_WIDTH   = 8,
    parameter WADDR_WIDTH   = 9,
    parameter RADDR_WIDTH   = 9,
    parameter OUTPUT_REG    = 1,
    parameter RAM_MUX_RATIO = 4,
    parameter ENDIANESS 	 = 0, //0: Big endian (default)   1: Little endian 
    parameter RAM_STYLE     = "block_ram"
) (
    input  wire                     wclk,
    input  wire                     rclk,
    input  wire                     we,
    input  wire                     re,
    input  wire [(WDATA_WIDTH-1):0] wdata,
    input  wire [(WADDR_WIDTH-1):0] waddr,
    input  wire [(RADDR_WIDTH-1):0] raddr,
    output wire [(RDATA_WIDTH-1):0] rdata
);

localparam MEM_DEPTH         = (WR_DEPTH > RD_DEPTH) ? WR_DEPTH : RD_DEPTH;
localparam MEM_DATA_WIDTH    = (WDATA_WIDTH > RDATA_WIDTH) ? RDATA_WIDTH : WDATA_WIDTH;   
localparam LSB_WIDTH         = (WADDR_WIDTH > RADDR_WIDTH) ? (WADDR_WIDTH - RADDR_WIDTH) : (RADDR_WIDTH - WADDR_WIDTH);
localparam RDATA_WDATA_RATIO = (RDATA_WIDTH <= WDATA_WIDTH/32) ? "ONE_THIRTYTWO" :
                               (RDATA_WIDTH <= WDATA_WIDTH/16) ? "ONE_SIXTEENTH" :
                               (RDATA_WIDTH <= WDATA_WIDTH/8)  ? "ONE_EIGHTH"    :
                               (RDATA_WIDTH <= WDATA_WIDTH/4)  ? "ONE_FOURTH"    :
                               (RDATA_WIDTH <= WDATA_WIDTH/2)  ? "ONE_HALF"      :
                               (RDATA_WIDTH <= WDATA_WIDTH)    ? "ONE"           :
                               (RDATA_WIDTH <= WDATA_WIDTH*2)  ? "TWO_TIMES"     :
                               (RDATA_WIDTH <= WDATA_WIDTH*4)  ? "FOUR_TIMES"    :
                               (RDATA_WIDTH <= WDATA_WIDTH*4)  ? "EIGHT_TIMES"   :
                               (RDATA_WIDTH <= WDATA_WIDTH*4)  ? "SIXTEEN_TIMES" : "THIRTYTWO_TIMES";

(* syn_ramstyle = RAM_STYLE *) reg [MEM_DATA_WIDTH-1:0] ram[MEM_DEPTH-1:0];
reg [RDATA_WIDTH-1:0]    r_rdata_1P;
reg [RDATA_WIDTH-1:0]    r_rdata_2P;

wire                     re_int;

generate
    if (FAMILY == "TRION") begin
        if (RDATA_WDATA_RATIO == "ONE") begin
            always @ (posedge wclk) begin
                if (we)
                    ram[waddr] <= wdata;
            end
    
            always @ (posedge rclk) begin
                if (re_int) begin
                    r_rdata_1P <= ram[raddr];
                end
                r_rdata_2P <= r_rdata_1P;
            end
        end
        
        else if (RDATA_WDATA_RATIO == "ONE_THIRTYTWO" || RDATA_WDATA_RATIO == "ONE_SIXTEENTH" || RDATA_WDATA_RATIO == "ONE_EIGHTH" || RDATA_WDATA_RATIO == "ONE_FOURTH"  || RDATA_WDATA_RATIO == "ONE_HALF" ) begin
            if (ENDIANESS == 0) begin 
            	integer i;
            	reg  [LSB_WIDTH-1 :0 ]   lsbaddr;
            	always @ (posedge wclk) begin
                	for (i=0; i<RAM_MUX_RATIO; i=i+1) begin
                    	lsbaddr = RAM_MUX_RATIO-1-i;
                    	if (we) begin
                            ram[{waddr,lsbaddr}] <= wdata[((WDATA_WIDTH/RAM_MUX_RATIO)*i) +: WDATA_WIDTH/RAM_MUX_RATIO];
                        end
                    end
                end
                always @ (posedge rclk) begin 
                	if (re_int) begin
                		r_rdata_1P <= ram[raddr];
                    end
                		r_rdata_2P <= r_rdata_1P;
                end
            end
            else begin //endianess == 1
            	integer i;
            	reg  [LSB_WIDTH-1 :0 ]   lsbaddr;
            	always @ (posedge wclk) begin
            		for (i=0; i<RAM_MUX_RATIO; i=i+1) begin
                    	lsbaddr = i;
                    	if (we) begin
                            ram[{waddr,lsbaddr}] <= wdata[((WDATA_WIDTH/RAM_MUX_RATIO)*i) +: WDATA_WIDTH/RAM_MUX_RATIO];
                        end
                    end
                end
                always @ (posedge rclk) begin 
                	if (re_int) begin
                		r_rdata_1P <= ram[raddr];
                	end
                		r_rdata_2P <= r_rdata_1P;
                end
            end
        end
        
        else if (RDATA_WDATA_RATIO == "TWO_TIMES" || RDATA_WDATA_RATIO == "FOUR_TIMES"  || RDATA_WDATA_RATIO == "EIGHT_TIMES"  || RDATA_WDATA_RATIO == "SIXTEEN_TIMES"  ||RDATA_WDATA_RATIO == "THIRTYTWO_TIMES" ) begin
            //integer i;
        	//reg  [LSB_WIDTH-1 :0 ]   lsbaddr;
        	if (ENDIANESS == 0) begin
        		always @ (posedge wclk) begin
        			if (we)
        				ram[waddr] <= wdata;
        		end
        		integer i;
        		reg  [LSB_WIDTH-1 :0 ]   lsbaddr; 
        		always @ (posedge rclk) begin
        			for (i=0; i<RAM_MUX_RATIO; i=i+1) begin
                    	lsbaddr = RAM_MUX_RATIO-1-i;
                    	if (re_int) begin
                    		r_rdata_1P[((RDATA_WIDTH/RAM_MUX_RATIO)*i) +: RDATA_WIDTH/RAM_MUX_RATIO] <= ram[{raddr,lsbaddr}];
                    	end
                        	r_rdata_2P <= r_rdata_1P;
                    end
                end 
            end
            else begin //endianess == 1
            	always @ (posedge wclk) begin
        			if (we)
        				ram[waddr] <= wdata;
        		end
        		integer i;
        		reg  [LSB_WIDTH-1 :0 ]   lsbaddr;
        		always @ (posedge rclk) begin
        			for (i=0; i<RAM_MUX_RATIO; i=i+1) begin
                    	lsbaddr = i;
                    	if (re_int) begin
                    		r_rdata_1P[((RDATA_WIDTH/RAM_MUX_RATIO)*i) +: RDATA_WIDTH/RAM_MUX_RATIO] <= ram[{raddr,lsbaddr}];
                    	end
                        	r_rdata_2P <= r_rdata_1P;
                    end
                end
            end
        end
        if (OUTPUT_REG) begin
            assign re_int = re;
            assign rdata  = r_rdata_2P;            
        end
        else begin
            assign re_int = re;
            assign rdata  = r_rdata_1P;
        end
    end
    else begin
        if (RDATA_WDATA_RATIO == "ONE") begin
            always @ (posedge wclk) begin
                if (we)
                    ram[waddr] <= wdata;
            end
    
            always @ (posedge rclk) begin
                if (re_int) begin
                    r_rdata_1P <= ram[raddr];
                    r_rdata_2P <= r_rdata_1P;
                end
            end
        end 
        else if (RDATA_WDATA_RATIO == "ONE_THIRTYTWO" || RDATA_WDATA_RATIO == "ONE_SIXTEENTH" || RDATA_WDATA_RATIO == "ONE_EIGHTH" || RDATA_WDATA_RATIO == "ONE_FOURTH"  || RDATA_WDATA_RATIO == "ONE_HALF" ) begin
            //integer i;
            //reg  [LSB_WIDTH-1 :0 ]   lsbaddr;
            if (ENDIANESS == 0) begin
            	integer i;
            	reg  [LSB_WIDTH-1 :0 ]   lsbaddr;
            	always @ (posedge wclk) begin
            		for (i=0; i<RAM_MUX_RATIO; i=i+1) begin
                    	lsbaddr = RAM_MUX_RATIO-1-i;
                    	if (we) begin
                            	ram[{waddr,lsbaddr}] <= wdata[((WDATA_WIDTH/RAM_MUX_RATIO)*i) +: WDATA_WIDTH/RAM_MUX_RATIO];
                        end
                    end
                 end
               	always @ (posedge rclk) begin 
               		if (re_int) begin
               			r_rdata_1P <= ram[raddr];
               			r_rdata_2P <= r_rdata_1P;
               		end
               	end
            end
            
            else begin //endianess == 1
            	integer i;
            	reg  [LSB_WIDTH-1 :0 ]   lsbaddr;
            	always @ (posedge wclk) begin
            		for (i=0; i<RAM_MUX_RATIO; i=i+1) begin
                    	lsbaddr = i;
                    	if (we) begin
                            	ram[{waddr,lsbaddr}] <= wdata[((WDATA_WIDTH/RAM_MUX_RATIO)*i) +: WDATA_WIDTH/RAM_MUX_RATIO];
                        end
                    end
                 end
               	always @ (posedge rclk) begin 
               		if (re_int) begin
               			r_rdata_1P <= ram[raddr];
               			r_rdata_2P <= r_rdata_1P;
               		end
               	end
            end
        end
        else if (RDATA_WDATA_RATIO == "TWO_TIMES" || RDATA_WDATA_RATIO == "FOUR_TIMES"  || RDATA_WDATA_RATIO == "EIGHT_TIMES"  || RDATA_WDATA_RATIO == "SIXTEEN_TIMES"  || RDATA_WDATA_RATIO == "THIRTYTWO_TIMES" ) begin
        	//integer i;
            //reg  [LSB_WIDTH-1 :0 ]   lsbaddr;
        	if (ENDIANESS == 0) begin
        		always @ (posedge wclk) begin
        			if (we)
        				ram[waddr] <= wdata;
        		end
        		integer i;
            	reg  [LSB_WIDTH-1 :0 ]   lsbaddr;        
            	always @ (posedge rclk) begin
            		for (i=0; i<RAM_MUX_RATIO; i=i+1) begin
                    	lsbaddr = RAM_MUX_RATIO-1-i;
                    	if (re_int) begin
                    		r_rdata_1P[((RDATA_WIDTH/RAM_MUX_RATIO)*i) +: RDATA_WIDTH/RAM_MUX_RATIO] <= ram[{raddr,lsbaddr}];
                    		r_rdata_2P                                                               <= r_rdata_1P;
                    	end
                    end
                end 
            end
            
            else begin //endianess ==1
        		always @ (posedge wclk) begin
        			if (we)
        				ram[waddr] <= wdata;
        		end
        		integer i;
        		reg  [LSB_WIDTH-1 :0 ]   lsbaddr;        
            	always @ (posedge rclk) begin
            		for (i=0; i<RAM_MUX_RATIO; i=i+1) begin
                    	lsbaddr = i;
                    	if (re_int) begin
                    		r_rdata_1P[((RDATA_WIDTH/RAM_MUX_RATIO)*i) +: RDATA_WIDTH/RAM_MUX_RATIO] <= ram[{raddr,lsbaddr}];
                    		r_rdata_2P                                                               <= r_rdata_1P;
                    	end
                    end
                end 
            end
        end
        // NIC
        //if (MODE == "STANDARD") begin     
        //    if (OUTPUT_REG) begin
        //        reg re_r;
        //        always @ (posedge rclk) begin
        //            re_r <= re;
        //        end
        //        assign re_int = re | re_r;        
        //        assign rdata  = r_rdata_2P;            
        //    end
        //    else begin
        //        assign re_int = re;
        //        assign rdata  = r_rdata_1P;
        //    end
        //end
        //else begin
        //    assign re_int = re;
        //    assign rdata  = r_rdata_1P;
        //end    
        if (OUTPUT_REG) begin
            reg re_r;
            always @ (posedge rclk) begin
                re_r <= re;
            end
            assign re_int = re | re_r;        
            assign rdata  = r_rdata_2P;            
        end
        else begin
            assign re_int = re;
            assign rdata  = r_rdata_1P;
        end    
    end
endgenerate

endmodule

////////////////////////////////////////////////////////////////////////////////
// Copyright (C) 2013-2021 Efinix Inc. All rights reserved.              
//
// This   document  contains  proprietary information  which   is        
// protected by  copyright. All rights  are reserved.  This notice       
// refers to original work by Efinix, Inc. which may be derivitive       
// of other work distributed under license of the authors.  In the       
// case of derivative work, nothing in this notice overrides the         
// original author's license agreement.  Where applicable, the           
// original license agreement is included in it's original               
// unmodified form immediately below this header.                        
//
// WARRANTY DISCLAIMER.                                                  
//     THE  DESIGN, CODE, OR INFORMATION ARE PROVIDED “AS IS” AND        
//     EFINIX MAKES NO WARRANTIES, EXPRESS OR IMPLIED WITH               
//     RESPECT THERETO, AND EXPRESSLY DISCLAIMS ANY IMPLIED WARRANTIES,  
//     INCLUDING, WITHOUT LIMITATION, THE IMPLIED WARRANTIES OF          
//     MERCHANTABILITY, NON-INFRINGEMENT AND FITNESS FOR A PARTICULAR    
//     PURPOSE.  SOME STATES DO NOT ALLOW EXCLUSIONS OF AN IMPLIED       
//     WARRANTY, SO THIS DISCLAIMER MAY NOT APPLY TO LICENSEE.           
//
// LIMITATION OF LIABILITY.                                              
//     NOTWITHSTANDING ANYTHING TO THE CONTRARY, EXCEPT FOR BODILY       
//     INJURY, EFINIX SHALL NOT BE LIABLE WITH RESPECT TO ANY SUBJECT    
//     MATTER OF THIS AGREEMENT UNDER TORT, CONTRACT, STRICT LIABILITY   
//     OR ANY OTHER LEGAL OR EQUITABLE THEORY (I) FOR ANY INDIRECT,      
//     SPECIAL, INCIDENTAL, EXEMPLARY OR CONSEQUENTIAL DAMAGES OF ANY    
//     CHARACTER INCLUDING, WITHOUT LIMITATION, DAMAGES FOR LOSS OF      
//     GOODWILL, DATA OR PROFIT, WORK STOPPAGE, OR COMPUTER FAILURE OR   
//     MALFUNCTION, OR IN ANY EVENT (II) FOR ANY AMOUNT IN EXCESS, IN    
//     THE AGGREGATE, OF THE FEE PAID BY LICENSEE TO EFINIX HEREUNDER    
//     (OR, IF THE FEE HAS BEEN WAIVED, $100), EVEN IF EFINIX SHALL HAVE 
//     BEEN INFORMED OF THE POSSIBILITY OF SUCH DAMAGES.  SOME STATES DO 
//     NOT ALLOW THE EXCLUSION OR LIMITATION OF INCIDENTAL OR            
//     CONSEQUENTIAL DAMAGES, SO THIS LIMITATION AND EXCLUSION MAY NOT   
//     APPLY TO LICENSEE.
//
////////////////////////////////////////////////////////////////////////////////


/////////////////////////////////////////////////////////////////////////////
//           _____       
//          / _______    Copyright (C) 2013-2021 Efinix Inc. All rights reserved.
//         / /       \   
//        / /  ..    /   simple_dual_port_ram_fifo.v
//       / / .'     /    
//    __/ /.'      /     Description:
//   __   \       /      EFX FIFO
//  /_/ /\ \_____/ /     
// ____/  \_______/      
//
// *******************************
// Revisions:
//
// *******************************

module `IP_MODULE_NAME(efx_fifo_top) # (
    parameter FAMILY             = "TRION",       // New Param
    parameter SYNC_CLK           = 0,
    parameter BYPASS_RESET_SYNC  = 0,             // New Param
    parameter SYNC_STAGE         = 2,             // New Param
    parameter MODE               = "STANDARD",
    parameter DEPTH              = 512,           // Reverted (Equivalent to WDATA_DEPTH) 
    parameter DATA_WIDTH         = 32,            // Reverted (Equivalent to WDATA_WIDTH)
    parameter PIPELINE_REG       = 1,             // Reverted (By default is ON)
    parameter OPTIONAL_FLAGS     = 1,             // Reverted
    parameter OUTPUT_REG         = 0,
    parameter PROGRAMMABLE_FULL  = "STATIC_DUAL", // Set to "NONE" if not require this feature
    parameter PROG_FULL_ASSERT   = 27,
    parameter PROG_FULL_NEGATE   = 23,
    parameter PROGRAMMABLE_EMPTY = "STATIC_DUAL", // Set to "NONE" if not require this feature
    parameter PROG_EMPTY_ASSERT  = 5,
    parameter PROG_EMPTY_NEGATE  = 7,
    parameter ALMOST_FLAG        = OPTIONAL_FLAGS,
    parameter HANDSHAKE_FLAG     = OPTIONAL_FLAGS,
    parameter ASYM_WIDTH_RATIO   = 4,
    parameter WADDR_WIDTH        = depth2width(DEPTH),
    parameter RDATA_WIDTH        = rdwidthcompute(ASYM_WIDTH_RATIO,DATA_WIDTH),
    parameter RD_DEPTH           = rddepthcompute(DEPTH,DATA_WIDTH,RDATA_WIDTH),
    parameter RADDR_WIDTH        = depth2width(RD_DEPTH),
    parameter ENDIANESS		      = 0,
    parameter OVERFLOW_PROTECT   = 1,
    parameter UNDERFLOW_PROTECT  = 1,
    parameter RAM_STYLE          = "block_ram"

)(
    input  wire                   a_rst_i,
    input  wire                   a_wr_rst_i,
    input  wire                   a_rd_rst_i,
    input  wire                   clk_i,
    input  wire                   wr_clk_i,
    input  wire                   rd_clk_i,
    input  wire                   wr_en_i,
    input  wire                   rd_en_i,
    input  wire [DATA_WIDTH-1:0]  wdata,
    output wire                   almost_full_o,
    output wire                   prog_full_o,
    output wire                   full_o,
    output wire                   overflow_o,
    output wire                   wr_ack_o,
    output wire [WADDR_WIDTH :0]  datacount_o,
    output wire [WADDR_WIDTH :0]  wr_datacount_o,
    output wire                   empty_o,
    output wire                   almost_empty_o,
    output wire                   prog_empty_o,
    output wire                   underflow_o,
    output wire                   rd_valid_o,
    output wire [RDATA_WIDTH-1:0] rdata,
    output wire [RADDR_WIDTH :0]  rd_datacount_o,
    output wire                   rst_busy
); 

localparam WR_DEPTH      = DEPTH;
localparam WDATA_WIDTH   = DATA_WIDTH;
localparam RAM_MUX_RATIO = (RDATA_WIDTH <= WDATA_WIDTH/32) ? 32 :
                           (RDATA_WIDTH <= WDATA_WIDTH/16) ? 16 :
                           (RDATA_WIDTH <= WDATA_WIDTH/8)  ? 8  :
                           (RDATA_WIDTH <= WDATA_WIDTH/4)  ? 4  :
                           (RDATA_WIDTH <= WDATA_WIDTH/2)  ? 2  :
                           (RDATA_WIDTH <= WDATA_WIDTH)    ? 1  :
                           (RDATA_WIDTH <= WDATA_WIDTH*2)  ? 2  :
                           (RDATA_WIDTH <= WDATA_WIDTH*4)  ? 4  :
                           (RDATA_WIDTH <= WDATA_WIDTH*8)  ? 8  :
                           (RDATA_WIDTH <= WDATA_WIDTH*16) ? 16 : 32;           

wire                   wr_rst_int;
wire                   rd_rst_int;
wire                   wr_en_int;
wire                   rd_en_int;
wire [WADDR_WIDTH-1:0] waddr;
wire [RADDR_WIDTH-1:0] raddr;
wire                   wr_clk_int;
wire                   rd_clk_int;
wire [WADDR_WIDTH :0]  wr_datacount_int;
wire [RADDR_WIDTH :0]  rd_datacount_int;

generate
    if (ASYM_WIDTH_RATIO == 4) begin
        if (SYNC_CLK) begin
            assign wr_clk_int     = clk_i;    
            assign rd_clk_int     = clk_i;
            assign datacount_o    = wr_datacount_int;
            assign wr_datacount_o = {(WADDR_WIDTH+1){1'b0}};
            assign rd_datacount_o = {(RADDR_WIDTH+1){1'b0}};
        end
        else begin
            assign wr_clk_int     = wr_clk_i;    
            assign rd_clk_int     = rd_clk_i;
            assign datacount_o    = {(WADDR_WIDTH+1){1'b0}};
            assign wr_datacount_o = wr_datacount_int;
            assign rd_datacount_o = rd_datacount_int;
        end
    end
    else begin
        assign datacount_o    = {(WADDR_WIDTH+1){1'b0}};
        assign wr_datacount_o = wr_datacount_int;
        assign rd_datacount_o = rd_datacount_int;
        if (SYNC_CLK) begin
            assign wr_clk_int     = clk_i;    
            assign rd_clk_int     = clk_i;
        end
        else begin
            assign wr_clk_int     = wr_clk_i;    
            assign rd_clk_int     = rd_clk_i;
        end
    end    

    if (!SYNC_CLK) begin
        //(* async_reg = "true" *) reg [1:0] wr_rst;
        //(* async_reg = "true" *) reg [1:0] rd_rst;
        //
        //always @ (posedge wr_clk_int or posedge a_rst_i) begin
        //    if (a_rst_i) 
        //        wr_rst <= 2'b11;
        //    else 
        //        wr_rst <= {wr_rst[0],1'b0};            
        //end
        //
        //always @ (posedge rd_clk_int or posedge a_rst_i) begin
        //    if (a_rst_i) 
        //        rd_rst <= 2'b11;
        //    else 
        //        rd_rst <= {rd_rst[0],1'b0};            
        //end
        

        if (BYPASS_RESET_SYNC) begin
            assign wr_rst_int = a_wr_rst_i;
            assign rd_rst_int = a_rd_rst_i; 
            assign rst_busy   = 1'b0;
        end 
        else begin
            `IP_MODULE_NAME(efx_resetsync) #(
               .ACTIVE_LOW (0)
            ) efx_resetsync_wr_rst (
               .clk   (wr_clk_int),
               .reset (a_rst_i),
               .d_o   (wr_rst_int)
            );

            `IP_MODULE_NAME(efx_resetsync) #(
               .ACTIVE_LOW (0)
            ) efx_resetsync_rd_rst (
               .clk   (rd_clk_int),
               .reset (a_rst_i),
               .d_o   (rd_rst_int)
            );
            assign rst_busy   = wr_rst_int | rd_rst_int;
        end

    end
    else begin
        //(* async_reg = "true" *) reg [1:0] a_rst;
        //
        //always @ (posedge clk_i or posedge a_rst_i) begin
        //    if (a_rst_i) 
        //        a_rst <= 2'b11;
        //    else 
        //        a_rst <= {a_rst[0],1'b0};            
        //end
        wire   a_rst;

        `IP_MODULE_NAME(efx_resetsync) #(
           .ACTIVE_LOW (0)
        ) efx_resetsync_a_rst (
           .clk   (clk_i),
           .reset (a_rst_i),
           .d_o   (a_rst)
        );

        if (BYPASS_RESET_SYNC) begin
            assign wr_rst_int = a_rst_i;
            assign rd_rst_int = a_rst_i;
            assign rst_busy   = 1'b0;
        end
        else begin
            assign wr_rst_int = a_rst;
            assign rd_rst_int = a_rst;   
            assign rst_busy   = wr_rst_int | rd_rst_int;
        end
    end 
endgenerate

`IP_MODULE_NAME(efx_fifo_ram) # (
    .FAMILY        (FAMILY),
    .WR_DEPTH      (WR_DEPTH),
    .RD_DEPTH      (RD_DEPTH),
    .WDATA_WIDTH   (WDATA_WIDTH),
    .RDATA_WIDTH   (RDATA_WIDTH),
    .WADDR_WIDTH   (WADDR_WIDTH),
    .RADDR_WIDTH   (RADDR_WIDTH),
    .OUTPUT_REG    (OUTPUT_REG),
    .RAM_MUX_RATIO (RAM_MUX_RATIO),
    .ENDIANESS	    (ENDIANESS),
    .RAM_STYLE     (RAM_STYLE)
) xefx_fifo_ram (
    .wdata (wdata), 
    .waddr (waddr),
    .raddr (raddr), 
    .we    (wr_en_int), 
    .re    (rd_en_int),
    .wclk  (wr_clk_int),
    .rclk  (rd_clk_int),
    .rdata (rdata)
);

`IP_MODULE_NAME(efx_fifo_ctl) # (
    .SYNC_CLK           (SYNC_CLK),
    .SYNC_STAGE         (SYNC_STAGE),
    .MODE               (MODE),
    .WR_DEPTH           (WR_DEPTH),
    .WADDR_WIDTH        (WADDR_WIDTH),
    .RADDR_WIDTH        (RADDR_WIDTH),
    .ASYM_WIDTH_RATIO   (ASYM_WIDTH_RATIO),
    .RAM_MUX_RATIO      (RAM_MUX_RATIO),
    .PIPELINE_REG       (PIPELINE_REG),
    .ALMOST_FLAG        (ALMOST_FLAG),
    .PROGRAMMABLE_FULL  (PROGRAMMABLE_FULL),
    .PROG_FULL_ASSERT   (PROG_FULL_ASSERT),
    .PROG_FULL_NEGATE   (PROG_FULL_NEGATE),
    .PROGRAMMABLE_EMPTY (PROGRAMMABLE_EMPTY),
    .PROG_EMPTY_ASSERT  (PROG_EMPTY_ASSERT),
    .PROG_EMPTY_NEGATE  (PROG_EMPTY_NEGATE),
    .OUTPUT_REG         (OUTPUT_REG),
    .HANDSHAKE_FLAG     (HANDSHAKE_FLAG),
    .OVERFLOW_PROTECT   (OVERFLOW_PROTECT),
    .UNDERFLOW_PROTECT  (UNDERFLOW_PROTECT)
) xefx_fifo_ctl (
    .wr_rst          (wr_rst_int),
    .rd_rst          (rd_rst_int),
    .wclk            (wr_clk_int),
    .rclk            (rd_clk_int),
    .we              (wr_en_i),
    .re              (rd_en_i),
    .wr_full         (full_o),
    .wr_ack          (wr_ack_o),
    .rd_empty        (empty_o),
    .wr_almost_full  (almost_full_o),
    .rd_almost_empty (almost_empty_o),
    .wr_prog_full    (prog_full_o),
    .rd_prog_empty   (prog_empty_o),
    .wr_en_int       (wr_en_int),
    .rd_en_int       (rd_en_int),
    .waddr           (waddr),
    .raddr           (raddr),
    .wr_datacount    (wr_datacount_int),
    .rd_datacount    (rd_datacount_int),
    .rd_vld          (rd_valid_o),
    .wr_overflow     (overflow_o),
    .rd_underflow    (underflow_o)
);

function integer depth2width;
input [31:0] depth;
begin : fnDepth2Width
    if (depth > 1) begin
        depth = depth - 1;
        for (depth2width=0; depth>0; depth2width = depth2width + 1)
            depth = depth>>1;
        end
    else
       depth2width = 0;
end
endfunction 

function integer width2depth;
input [31:0] width;
begin : fnWidth2Depth
    width2depth = width**2;
end
endfunction

function integer rdwidthcompute;
input [31:0] asym_option;
input [31:0] wr_width;
begin : RdWidthCompute
    rdwidthcompute = (asym_option==0)? wr_width/16 :
                     (asym_option==1)? wr_width/8  :
                     (asym_option==2)? wr_width/4  :
                     (asym_option==3)? wr_width/2  :
                     (asym_option==4)? wr_width/1  :
                     (asym_option==5)? wr_width*2  :
                     (asym_option==6)? wr_width*4  :
                     (asym_option==7)? wr_width*8  :
                     (asym_option==8)? wr_width*16 : wr_width/1;
end
endfunction

function integer rddepthcompute;
input [31:0] wr_depth;
input [31:0] wr_width;
input [31:0] rd_width;
begin : RdDepthCompute
    rddepthcompute = (wr_depth * wr_width) / rd_width;
end
endfunction

endmodule


//pragma protect
//pragma protect begin

/* Encryption Envelope */

`pragma protect begin_protected
`pragma protect version = 1
`pragma protect encrypt_agent = "QuestaSim" , encrypt_agent_info = "2021.1"
`pragma protect key_keyowner = "Aldec" , key_keyname = "ALDEC15_001"
`pragma protect key_method = "rsa"
`pragma protect encoding = ( enctype = "base64" , line_length = 64 , bytes = 256 )
`pragma protect key_block
sGfLYp7wbHpQBQM9mzLX3UetdIqFTtRiZ3FZDgQ5Wy7Di+WwuQHRQnYTyXAkMRUz
B3h0cISLLVXSOs+F3NM4k2lvVbSJdbXG+L/lsjA/mw5ro7c9L6CGPySwyT0qtolj
cCkF8An72t8jr4qunUOj8LyOS6jmcnJxsekHU+QX3TJXNdSx3JoomoixnMQFUOyx
ksh/jWwHaDUag4myHWcw8Xe6YsICpjXFt0CV9WyZUpqjFcQ6lEfcGEn+B3+fE5uZ
CrahDCqRITIcb8fXoFOsUzBNeB91SkFbrX+K8XQv6lo7BZ+U0I0OXPtjtMnFAWS3
OVBZ1B0LtmypurYAOeA1yQ==
`pragma protect data_method = "aes256-cbc"
`pragma protect encoding = ( enctype = "base64" , line_length = 64 , bytes = 3488 )
`pragma protect data_block
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
`pragma protect end_protected

//pragma protect end


//pragma protect
//pragma protect begin

/* Encryption Envelope */

`pragma protect begin_protected
`pragma protect version = 1
`pragma protect encrypt_agent = "QuestaSim" , encrypt_agent_info = "2021.1"
`pragma protect key_keyowner = "Aldec" , key_keyname = "ALDEC15_001"
`pragma protect key_method = "rsa"
`pragma protect encoding = ( enctype = "base64" , line_length = 64 , bytes = 256 )
`pragma protect key_block
030WrHCQ5OUsiaUyS1tGLtzjOjak/8C+yIki7ulIm3+tvYS1v+E1hom/SKePIBSd
TemIaso68ZDFOmtOpn33+XC52AuHnjmpVt3F8fW9fiFtmHJUukhHimeJKjqMPMSU
g3q0OZpLYiGBivM6r+J9+ykjSWim8yvnWMTgXvmPZs5oeFPV+smmOq1BL6QZlHWo
NYAzkHrbbmULUdX/j28zawB9GVvRL6xwJ4SfrTSAFn4KzK5slJplJCYQP0XbEz9F
Huou7nzT1ATPoJJszqBmR+AeUw9zdilMvzvRtj9OCNjKgVrer0X9UqfD0PxoY1/e
OW5bl+X7vDWpYViCdeYzAg==
`pragma protect data_method = "aes256-cbc"
`pragma protect encoding = ( enctype = "base64" , line_length = 64 , bytes = 27472 )
`pragma protect data_block
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
RvyI2jMa1OLsFHQK8Moi1Q==
`pragma protect end_protected

//pragma protect end


//pragma protect
//pragma protect begin

/* Encryption Envelope */

`pragma protect begin_protected
`pragma protect version = 1
`pragma protect encrypt_agent = "QuestaSim" , encrypt_agent_info = "2021.1"
`pragma protect key_keyowner = "Aldec" , key_keyname = "ALDEC15_001"
`pragma protect key_method = "rsa"
`pragma protect encoding = ( enctype = "base64" , line_length = 64 , bytes = 256 )
`pragma protect key_block
deW8f9PU23dAzmEfkYt0yI8vxb+k5LGqkJkGpKsIQh57LX6TuWR4vlAZJNsReoIF
fhWg2UHQs9HQatQIyFI1m03TUyMAgQqXYem8iBitjYINZ24qDFp22P+G8BayAe29
4sR2mAdlgfb6bxr89mqZW1E9wCFMtafjCQek0edCOLvSRNHSdsZ3H55In3fzvWGi
0tDniMjluK98xsgLNX+G//Aye4bveo/EUC4TFu5PrnD3PIt+dnnJYKQvE5yceW4z
3DgNHTNYosMpKoS6yEWIHE8iL76YD/PmVQErsGdzEZ+hN/hnrRQnIWq6aOcIo9A9
Hj3f4QAax8wsjTgtJHo3LA==
`pragma protect data_method = "aes256-cbc"
`pragma protect encoding = ( enctype = "base64" , line_length = 64 , bytes = 27520 )
`pragma protect data_block
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
4QBzUDT6CdjY8o17L9D70RyVLndwwkPwGeOoag4SsuBvGAxtgIxBlY4BbhbcZjkB
1Zs2Fn7SthU/UyJ4WVwboFkGbg/1lnfhuvQdTZmHy7t7Fwc0wj/ZO/GkIn6GWzmj
Tr+rt5otbjYZnNxTPQIu/JP/T8dyyT9aiL3UkvAHRZ1XMFkhOHP6P2imSkr/AGeX
2Rxwr7uYxfdH7FGqRtEUQO+kR//l6I94zhcifZw2S4acO4efU8ZUrPtX8fjBkfVI
EG76BS7jRYobUEHDul9A1iC/3LCtpAkFzm+G5HD3DmKgSTkEvV1RDJriPEcifp+2
bgig8x9djsA2djInK20mFTYi9J7ZUkzk06rsuPP9Rs4QxkJyMZHnLKVEq+6xNUDA
4Jn8CWG1I/7y+yGXao+KyhT70PV9bdZVt89q+q1C9b2BVdfeADTOCGl3BYWa4WMr
raMNQx3FwpLUYkC6qj1rwPjOUjuppSlIiZ9zr4Ty0uRFco8ofUnuneNQYUltG6zK
FqCZ/nbtA0l61TU37COMSqBlnmFq0Qq2kBU8y79vub58g1t0JA8RGyG56aL3SJoa
0MnPNk7dtNkyIeRU3E84PdglPcC3Rl6wsXxFxU5NIyGrZcqoKyzqO9flDbnTNqT9
8Okq7FLPXyQFg31kUiDTKoBGtVQ0kIqu71ylDApSYVYQL9+Jmu24djYUl3FUDUvy
+84IDl4brM+LMAFBvWDuL8TvoketN7uCnThIzPG6i27Osy2BaWaJb7wfpBBdO09l
WImKK1G94eSlh66brVwC8fu3zYeRG4ic0Wa+6+jxV9WpfVmLPgvHBpWcDkNRdCs7
kqlZjgdxCGPi2x1RPA3Q0GMXWRj+eqbRaUmtOimo+TXusw3qVLi+gwBVkaBVjOCg
ikpJY+Y7ufsiZ9Uz57rTPVGAkkK2hKunhlMfqZ2UzliQuHCrt4ERfnGfRK4S6kO7
4v3oMZtqesx3PeUXLqqdcaFqBfASr2Z+akDKCCz1rI2teuuy35M6F/KmNiOUHpOG
3f5HmCASUk7hDXV+F0jUjE9Fgg7hYTzc4yMfVK78eJ9xgNMwseE1WEHl7jtwCX+L
bqkX3hJlOJBzl3WKH1uiqk8QDNFQENzqALVCCSnv3n+guHmb/tdyIPh0x5iPo1JW
csYPT2tJuACG1mWqcfv2vChinpdgXf2xD688ICNVYGJqqM0ybi9W94Y2PtjVhACp
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
SIC0vr8ymv0iSnP+kBxrTg==
`pragma protect end_protected

//pragma protect end


//pragma protect
//pragma protect begin

/* Encryption Envelope */

`pragma protect begin_protected
`pragma protect version = 1
`pragma protect encrypt_agent = "QuestaSim" , encrypt_agent_info = "2021.1"
`pragma protect key_keyowner = "Aldec" , key_keyname = "ALDEC15_001"
`pragma protect key_method = "rsa"
`pragma protect encoding = ( enctype = "base64" , line_length = 64 , bytes = 256 )
`pragma protect key_block
OqdOWO1Kw+j0tmFWTwcCTv1JuMXxKcDO8tB4rP7BCXpwWzLhGb7B4dsHTqayVrCv
7wz4CgoLii/JALDaI3AwNeJ/IGTPb/FtaMOqXeYOcPgEKp4umJW2etD7RWivKuKf
DNz3nh3WLT6/JSCaWecB8jC85xsPezrIpVdAHO5rRGGjj/9S37O3lTNEEd3aZV0x
QOR0gKqrds6VLxDs1dswiilFsRHYefvCpDp8hvHEBXdZXF/EiKtJOvA7aOxfJG6Z
2MO8enGoLcZe2ctV1asZzGTe98g0LWbQp6qp+xK+tbGwUKQnLEEB1q6vgUIlR46C
mLQRCzzMEbII4e01Y53DiQ==
`pragma protect data_method = "aes256-cbc"
`pragma protect encoding = ( enctype = "base64" , line_length = 64 , bytes = 4416 )
`pragma protect data_block
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
`pragma protect end_protected

//pragma protect end


module `IP_MODULE_NAME(efx_mac10gbe) #(
	parameter CUT_THRU_STORE_FWD			= 1'b1,
	parameter INTER_PACKET_GAP				= 4'd12,
	parameter MTU_FRAME_LENGTH				= 14'd1518,
	parameter MAC_SOURCE_ADDRESS			= 48'h0000_0000_0000,
	parameter ENABLE_BROADCAST_FILTER	= 1'b1,
	parameter REG_WIDTH						= 6'd32,
	parameter TXFIFO_DEPTH					= 13'd4096,
	parameter AXIS_DATA_WIDTH				= 7'd64,
	parameter DETECT_LINK_FAULT				= 1'b1
) (
	input  logic		mac_reset_n,
	input  logic		mac10gbe_clk,
	input  logic		init_clk,
	input  logic		init_rst_n,
	input  logic		PMA_CMN_READY,
	input  logic		PMA_XCVR_PLLCLK_EN_ACK,
	input  logic [3:0]		PMA_XCVR_POWER_STATE_ACK,
	input  logic		PMA_RX_SIGNAL_DETECT,
	output logic		PMA_XCVR_PLLCLK_EN,
	output logic [3:0]		PMA_XCVR_POWER_STATE_REQ,
	output logic		phy_init_done,
	input  logic [AXIS_DATA_WIDTH-1:0]		tx_axis_mac_tdata,
	input  logic		tx_axis_mac_tvalid,
	input  logic		tx_axis_mac_tlast,
	input  logic [AXIS_DATA_WIDTH/8-1:0]		tx_axis_mac_tkeep,
	input  logic		tx_axis_mac_tuser,
	output logic		tx_axis_mac_tready,
	output logic [AXIS_DATA_WIDTH-1:0]		rx_axis_mac_tdata,
	output logic		rx_axis_mac_tvalid,
	output logic		rx_axis_mac_tlast,
	output logic [AXIS_DATA_WIDTH/8-1:0]		rx_axis_mac_tkeep,
	output logic		rx_axis_mac_tuser,
	input  logic		rx_pause_ignore,
	input  logic		tx_pause_gen,
	output logic		tx_pause_busy,
	input  logic [15:0]		tx_pause_quant,
	input  logic [47:0]		rx_address_filtering_mask,
	input  logic		cnt_rst_n,
	output logic [REG_WIDTH-1:0]		cnt_tx_frame_transmitted_good,
	output logic [REG_WIDTH-1:0]		cnt_tx_frame_pause_mac_ctrl,
	output logic [REG_WIDTH-1:0]		cnt_tx_frame_error_txfifo_overflow,
	output logic [REG_WIDTH-1:0]		cnt_tx_frame_is_fe,
	output logic [REG_WIDTH-1:0]		cnt_rx_frame_received_good,
	output logic [13:0]					rpt_rx_frame_length,
	output logic [REG_WIDTH-1:0]		cnt_rx_frame_error_fcs,
	output logic [REG_WIDTH-1:0]		cnt_rx_frame_pause_mac_ctrl,
	output logic [REG_WIDTH-1:0]		cnt_rx_frame_errors,
	output logic [REG_WIDTH-1:0]		cnt_rx_frame_received_total,
	output logic [REG_WIDTH-1:0]		cnt_rx_frame_undersized,
	output logic [REG_WIDTH-1:0]		cnt_rx_frame_oversized,
	output logic [REG_WIDTH-1:0]		cnt_rx_frame_mismatched_length,
	output logic [REG_WIDTH-1:0]		cnt_rx_frame_filtered_by_address,
	output logic [63:0]		XGMII_TXD,
	output logic [7:0]		XGMII_TXC,
	input  logic [63:0]		XGMII_RXD,
	input  logic [7:0]		XGMII_RXC
);
//pragma protect
//pragma protect begin

/* Encryption Envelope */

`pragma protect begin_protected
`pragma protect version = 1
`pragma protect encrypt_agent = "QuestaSim" , encrypt_agent_info = "2021.1"
`pragma protect key_keyowner = "Aldec" , key_keyname = "ALDEC15_001"
`pragma protect key_method = "rsa"
`pragma protect encoding = ( enctype = "base64" , line_length = 64 , bytes = 256 )
`pragma protect key_block
E0tf9TlzcMd5dbxD802NaIinXVNDmyX8HULj6M/sBpmTAwqFEZS8hmc77bipOTP6
Q59Zt0Sm7kQeSGNTSCWC3GRn19AE8w8jU07wQOEigKBguajglbkMyG/1+jpN9ybw
aAGZ/GyDk1neNPls21R4ceKrrxE1rYLP/2Nj/VJVE6jIy0SFU4mmNnmxz9IVHfHp
ByEEiyfKRodbOPUz8p3DWeKusCgx1cYu/i10jDLebMBorZduhdsAmjS7ZTTr4djw
V/lpj8m2BDwFsR8arW3oY3sqP6i1RUWD1vYC3SiL0TeWQppf4kUrhX3hRcZYGDQt
Pci7riVGfVdtzPWkLVQpXw==
`pragma protect data_method = "aes256-cbc"
`pragma protect encoding = ( enctype = "base64" , line_length = 64 , bytes = 2928 )
`pragma protect data_block
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
`pragma protect end_protected

//pragma protect end


//pragma protect
//pragma protect begin

/* Encryption Envelope */

`pragma protect begin_protected
`pragma protect version = 1
`pragma protect encrypt_agent = "QuestaSim" , encrypt_agent_info = "2021.1"
`pragma protect key_keyowner = "Aldec" , key_keyname = "ALDEC15_001"
`pragma protect key_method = "rsa"
`pragma protect encoding = ( enctype = "base64" , line_length = 64 , bytes = 256 )
`pragma protect key_block
u1Vb/wgfFXwdIDM/ZXpKYD8S4f6xejl4LXSWQd71LYg80s6oJ0B3kAuA6VXDIV3N
eYb8B1mZS5ufaKnlostL7uNV/tetRliPDzkNUbmr38kCvnjGDNgDcbLfO0VeY5oz
yR+bKADx6e4JFt4O/dfcYMwwrk3YbZxvGFnBgxrX9r9YpqmlNhg6OIW1JoUqsvBB
EWGRlnHy7Lfop3qfPjkZ7l1NS7FjtP83i33HIlObfsvOKXTxvke7RBl0yj5FBVKi
4LJIIfKWSSAnVL1SFnKbRzvQR5V6DhJz5Fpt/wNRmJhlQ0dpjjTh3z73ETVE+Rwt
0SIIvBbug4fOJA/iuqXxug==
`pragma protect data_method = "aes256-cbc"
`pragma protect encoding = ( enctype = "base64" , line_length = 64 , bytes = 2128 )
`pragma protect data_block
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
W1LGjMG4NVonryyX9l57kw==
`pragma protect end_protected

//pragma protect end


//pragma protect
//pragma protect begin

/* Encryption Envelope */

`pragma protect begin_protected
`pragma protect version = 1
`pragma protect encrypt_agent = "QuestaSim" , encrypt_agent_info = "2021.1"
`pragma protect key_keyowner = "Aldec" , key_keyname = "ALDEC15_001"
`pragma protect key_method = "rsa"
`pragma protect encoding = ( enctype = "base64" , line_length = 64 , bytes = 256 )
`pragma protect key_block
Y1t0LqKvws584DpqGM0/vfsYhBO2SMJsl1MEnIkrzjOwEHbidB2pxZHnwPNnRSRy
KM9Nc6Qy57K8WokWT3kBIswfvYDMnRSciL3cRMPiPLFuICLojq3HCOHylnQ6sMgr
Z9f69tRAhPnGtNVCmGJ/MbwUHSFH810TI1I9WU5I2ovJVQLS31VpQugbJgz6GUtl
eCw/honfwDF6RsJoxLIhSIfV3Zglx/5oA8P7HSh2rzJEvoIzr5PCw3wSzu7bb3ik
SRD8E14xT7Y/mDlODNYMqvhOgxy7Hmk7If4lOLLupQLCauIMf0jUukl+UqcTk0mY
eyNoWwhJEiaKHyk5btVcTA==
`pragma protect data_method = "aes256-cbc"
`pragma protect encoding = ( enctype = "base64" , line_length = 64 , bytes = 14288 )
`pragma protect data_block
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
`pragma protect end_protected

//pragma protect end


//pragma protect
//pragma protect begin

/* Encryption Envelope */

`pragma protect begin_protected
`pragma protect version = 1
`pragma protect encrypt_agent = "QuestaSim" , encrypt_agent_info = "2021.1"
`pragma protect key_keyowner = "Aldec" , key_keyname = "ALDEC15_001"
`pragma protect key_method = "rsa"
`pragma protect encoding = ( enctype = "base64" , line_length = 64 , bytes = 256 )
`pragma protect key_block
LiMfZp10I6j7l0dJVioHkHYZszJAPsfKXBvs3zyqo629lUJABY5dOGGtDhx8Ra3n
4PtGhx7p3ds6DIwwOUtUI2LBDJ1ly7tNBv2XxiLVEOHRETZBPdNrCTg8840coV/A
pun82Nyc8j0tYPAeB+dohk1UvYBO1woa5KrP218smKCvAcwntBA6wR/xs9dYoRkq
qFoT/8vC4ZmOoEeJGtmdLySTPE6DgxNZsS5nz707awkEn4eCv7a1xgqRaTCmP1Tg
1Q+G/WAR9NkDII/zf1MH3GxYNve4Yfsm1IYc/xuyABjn9mdaHxq7l5kL16qDA1gD
DoJBCdzsWRx2qOLmYEUu2A==
`pragma protect data_method = "aes256-cbc"
`pragma protect encoding = ( enctype = "base64" , line_length = 64 , bytes = 3968 )
`pragma protect data_block
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
`pragma protect end_protected

//pragma protect end


//pragma protect
//pragma protect begin

/* Encryption Envelope */

`pragma protect begin_protected
`pragma protect version = 1
`pragma protect encrypt_agent = "QuestaSim" , encrypt_agent_info = "2021.1"
`pragma protect key_keyowner = "Aldec" , key_keyname = "ALDEC15_001"
`pragma protect key_method = "rsa"
`pragma protect encoding = ( enctype = "base64" , line_length = 64 , bytes = 256 )
`pragma protect key_block
xYQFJjZtVAHEjYjbxh3/dWhRNuOankbam/OhdYCVvpNypvTFCBrsGO26pe+dTY0Z
nHF7PGGPXpAPHgn27Rlu+dAOCWApb7WycwkO6Qr6BQVLMJo1n7cwtfrnPsmbla5t
syhn96oGrSUD+jtG9QubI4bmJZnYvMxXjYdE24ZvoUrAKfs4Wo4R8Syt6HMvC5bK
ioAWQj5qERtYeWUH68NTkajjU8JFvR44vtfWcSvWgd1QRMaF0WHCq5weJugIbx5f
ofIqe7o4q6KeYfamMLGp1udk+HRFV4bj8h4Sji0AzLrCkpq1WHi0LchZV2xJuYcr
fSkbyWeGKSVHenJCF9AJIQ==
`pragma protect data_method = "aes256-cbc"
`pragma protect encoding = ( enctype = "base64" , line_length = 64 , bytes = 6096 )
`pragma protect data_block
GtgwTv0T9GLlffvpA1jAu5H6c4iKNctipbwGtdxtER8urisqL4we3Lu+ONHCdyUa
zr1V7kr0h2kZxiXdViMj2PXbwVj4hgELNl/WQGjkkbSvpPD+5Xz/1Im5TTXSWSwR
ACOEZsxHiMFzvwMY2+AGDhY85IHLUKnYExH7TLPd+jIzkFU+4mcwdzT+zm7++591
Oi5FFvxE2FNw9FwtxgXFSXUaFwHVhsKIP1XiAQAoxL17FeAx7mUOawdbPBuDTazp
VPeJKkpHyFMB8OiCYc2YnLA+O/amTY9w7cPCLajRGxbI1jAStfyqxOF1JRTLnboG
Rqs2WsB5F1NJcP8gKmX8Svfjr9KybBnKgVoc0wY0vk44L5StvCrECAUI7me2JIak
tFd5XEv3K6ozQykkuOWuIEw0wpjolOMXez+mN8r1Kc1JQFt1iDWrWHt1etjsc4ge
1uk2TrbgN6d79qzwuF9gDoWlKoVRtDvPr81/rT1LDTjlSvW7AlJNY6SGsZgp2URA
0PYx4y0aJ+4H2sIIGRoE9rTLr7PvQS+Tkm4iAStO0Qk8hQgjplHvjZTMbkYFA8ah
4ZA2jdpStDsP2DiARShOYiU4fKc5yysW6m06erqoDbdsetnsWNmIoAtp8DdY3q1V
3ueKxTv4snRHd8jB6KiZJJ47dtt5Lt+L5R2hwVXaEeIUitoVhN6oy7uNa6vQom6+
l+BpE/GV/Aoo5yDesG0yAoLA2s7lRghmZT5hdRaGVEksiIprRYLOZVCV5V8yV70C
pQoMBMsb9W5CpfCKUIHIIpb3if6w2r2p87VbvdUsqr6eOqZca7t7HwJNwPc431KB
lpRo5pO0JFLGLwafvKACfmXueLEnLfBLFa1sAiTJZOqsDmIKI7TjwxLP4Tj4fNxa
BEz6FKgWCkDZIzGpQq0WPlN/UYqXcdEps8QQypOJRQAWASg4tq8lfrAEG8aD/PJY
JAy28fxe36HbwziGqfAzVKdK7z8IuHLeptWWOHdLVuivFHxvGo7C320kmQIiCAJ8
yJxudshFNtpnvM6VetiLBVvpBg9fA6+BSDLB9laASP14rQXybq46tjAXwHj0qpdF
m+t3KaTIdUtGAg77xAsZsRqQOjnrX+LkjcjX6a69eKhBxbBV5prfqcq8zWSWa8qQ
f1N3HrWVxaRGkRqDcp6PEnCUyg9vL2qx24GF59NzH2gf9wCLY4jhTpx3YkirSn9l
HZ3glHW7lDN5sLvsrewO3Jo/2QkV/XqqgtjJm3alIUgy6IrHOjnk4Vx/7auuYx1t
9cx6PR+DOqcRtRyYwXJylD3JD9r/EIaQ36TwnuBuq3VU1/2CdBxZTUYGJHPqfYZC
nU9f0K+Mc0+T/Vy719NYfnzvC5OVIv8ovh1EfUiR+XYCK2e8OCWDRm9CBP1L4pBj
A946YnC4dhs5opVjBF3BsvfBI9rBYSNgm2BA7lQC1BVCaCyFhzf7kxiMh31cijnn
qBFSIGqJUj4euvrOpWf9j/t9vsbKdjZ0dVMFDwfHrDVTbPpYbEpGByFeCmUrBUvR
5a6eLxKoxxMK5fjwhX0njX/FS+9RKPh5VchnCd+FczzxdDeUov01xFKzRp+FvvHq
MyirPnGz3YlOCuQtI2qP4UVI1OR5Ymaor0qKzXpuml6ALMIH5tnGeSRwSEra0kG1
pRVb/QdZRB39Krx+lFJd66mVWZs04tHB2AuGGbPWbR8RCslL+l5OuRfG3zwdunrB
Agmpm72yy1ZsFkw8CbwAgUw91ihawoFOW77OJ04mLycH/zZth2i6CaSFny77zGnZ
o5VFiFwDSdYV/CCQyP0mZYK8kcNnEKHTzoo1dBdSLyUoRwKaWPfLGJrAMC47adh9
jAcOSODbEbBJ4YyUEzy9srpTWE9UX61q/oNgqSnUOXRwTLcf9xiDRt8x0p4JQC+O
4U046nDXMhfjxYOPzY4ZOWWT+bRtIPCPQoBRSefG9kGswo2AzaYeNppfHszlM0Wq
bD9aCgGlejDsDOZKMz/OgXADdsI2vFFjWT0oh6hb6abqHc2uj9vu2W3aq6/1fZCc
/qFdNDexB8WIN9d+UL71YpUDpvAw67VtiScA1ZYSpUuFPYF32ONzs+i2wJQhhhR3
8Oo3899aKnlinQ99uICga0VbxhjOYHIwcAHRfJXEoLzOgXGTEFpEIxc39OpyaMqy
35QPc5c2k0scdxlryqA2XzVSIkQ+T7Z1zqn+1oYyV7gpwb8lq2CJ26fAAQAIWD0K
rO1a2Z3Vx8rxKrtjaLxhNVHGweWqlMwKuAnCZsEjflGWbRS1rDVQWhC00so0w9I6
GU1tEge6B16Ect3OaxtJF02VlzbWkgdvespYP4+7vYc6/RkGvHg/g9D1JYEwRMhy
PQRBc2cxrKfmyDhhflOz2C/4I+smnNbLd9H4fdrjlN8nUjIQXNUtkI6zrjTGAZ6v
mnMyRCLXQ7+oVTUHxhZtwA1iiQzcuQIPkS3uYSXMSMHtoOLAaLL+FU5KhTUlQ3np
Z3Wc0T5LyZPDU/vNRhfQJKwhLmS3JYRNeWJnwgCzSdFrWvQYFP7EtwqdkSzVvkiz
/LLaD0ROzRaFweUuwdhAXeMtEDawUq/al74QB5wzoqQqGMSLgosOKo7PzQujRriW
ZJCuP5lk4reYhlpQmcVO7ls1QfC98EcF31tgY+VA5TcxXW0qt0la2wg6npCQ5RBC
6VdU7mWDR7Cg0/51cal0RA3eavdYxNi1+XskeKvUSwQ15DHynCxeqtllFSzs1+UL
RsiewP0D/0SuiukHPlm8NW33Co8w7G1kk0l9kyN/t+32jBVWDcbCScbe3ggh15Cm
E7Jm2zfI9fyez6GNZb1LWEv5/7Cu14QM8sm3B3HWry88SVPN2H9XwJtZwq/RF2gE
+Fi843l9HW3sLC2XGqxJhr01bHnL7r9KiFrJcG9W7J13qlIzLN2tqmNWDjsK6ljP
aaq2AKxHtH97mAm25mToPbGCWV5Kpyfkh802FXzJxKBQUqcgmFj2C0EeEEFW3V/h
0SSYDh3B8Oz4CzAxRVGmhTh0SiYNgw4UC7kvK4iT9yxievReplLgQ4kqJaks7ac2
DWZTX0QSF8HMWBaF7AHtDC99xWlez31evT3EN3egyLKswJ8bMScuRaIILXks8kSv
EgNA+qMiXWoLQSBjaOnNFHcvM+7P5UDue0JLdQePSRRv9c+r32Lu2BJBcfSIHDB+
kmVCfReT9+BmkAC1XOtA/iFW0wRO941n3983a88BMiw64Mn1nB7gUnU4saEFi4eI
bYz8alQgx3PG3q0/zVjzE0KfZUDcI0/8qe6BeKEyCoRO+/Tj55ZmZ/FgZ/4BMHcz
/x6gZXtY/pSZnKknafng1SdDRMGYWLNKnTgXFliFRxdD27QYF8uc7PBC8nl/S5nd
RNwP0flDrtqGIye80lACXuuVgRcYtA3qkO/NjReKAv1W9biUx4Fzc4MofIck+IAB
XidOcddntuzH2fJpHgnUuSY6OOGKpcGfmMeuTEc5ah743XCM87APN7fFgrurusJa
bm0ICRIe+BljfX8sAzFagFdf3JgQw+wA0B92tqCO/EQEu6VqlEGG8KtYIfaZR/yz
hLVtdr9RSOUrD78mvd1lCYkyt0ialyEMza0880CjrPHTG4DMgjI56IheeRKiESoB
Isn+bChq8VK78SQAx2SbnO46xan3Yn88gsjjHKV9lIJ9FGwxUEfyhM/udGZ/a4AT
m8vOGqyjcV1y8je/iO/4mWRaqWlNTlq4vosG5XK2FzHGWE2wnSTD6jJ4jqekZJqB
0iqjfKuEFrVoUMBeLr+q70VcAQ5j0lWaUio3CyUTGJCeK4LsYM1GILnmXrjk17vl
/7bN+ot7yW+wjFbIWq467jXPODBzm5UzEwGumbLevNvxEU7UURS6noM27oibasaz
b1tpJMh/RuWxhezGiiFiZRuVtGYnKj7+jgrm0hvOK+9ZLzYjTii9LUaVUVGx8RmD
EQB1c2sN4JsRF0aNd2pmruW19ibSJ3o56ylsHjUvJEFvz3bXOlINV7rIqbgzFwmH
DU7QZs7s5VdFx56fCqSlCfEfUvVZM6b3t1zvDHsWBU/V14aWJv5Nb3z9wvJ88ESq
xVJ+i1JzNOy5/shNxbcRZ4FcQzLtA0lNDTc2meV+nEjkQ2oPGW6E2Z8GQ+5HfCQu
ETiHk7i8DnqFJa+rJQeEriogleIJiKjdo8K1YtzO+AJCoYIhKUeWhJa9CyUNYFZu
QkCC2EHsg3wAMdwuZXbPGqzhuXTe4SWM1hcE56J0WPEWIADJfUYQ3tMLu51XwPDV
+rIL5c2mn9PC/i2iNtkiTZImcd8VGf0D6Qldd74Mag8Qi+1D7EstotLnphQxv90N
sIEbeU5bY3qWPZ5HwjxRrL+SQ2vY9jkwMNirF5G0KzEyraxUgAJjmTWWfeisgbP9
udTQC+ft7h/5y3cOHXuHikRYuPJTFKsd0Io2PIuhFrLGpOUH73i1GxEVzEo6ii/u
+ZZkE9SDsxqAd4CCamXx9w1P28hzxlx+vO/tmOsF5sIyfA7ZgT4B7T+bgu2fdSKV
arwJYDbgZzL5e2v0Xu4doZhWunxo/yT87RsDscV+ePsBjK32zqNYuJbN5XG5PLCs
luXwO2UTvOxVzgbkin4ySXTOAz3ROcUn1HBNPZKFYjObydwfu3SuKLi4CulBhKJr
wXzVW78BYcwe3wkmnJGL+P+tm+yVxps3fK40oeJ6tmdWglpd+D2TuMFNFrLVNOBz
p8/KYrp0rE89Aq5Stne+CU6TuD8ZbqQ0NkdwPZtFw/TP35shPlVCF1I5NtWPqXII
zmZnclLMX4nFTZynsyQS8u6xdLiIo9vfLDyQjtyunbOUY1E3B9WQuzeT751ctijE
tZF3ILN5JAJ1q4XNWdq2cXJtmolIbtWohSnDEQG2R7oo4ekJq3hyGXb83YhSWGNf
NqshxZdfawLa6hUDPyZKdn27rJlWQWAiU91nYMtZ9IeaUHSK1dZ+FxqcV4zFwWjc
Wj9/XrJosFT1U8+bvnokkpnV2kVr1J10UjVmP5NXokP+6e/tekK+688TxiKZPU8W
PJR7asky2eE3IBE6qRo1OLDgDjPZH9ySJlURecUowuTd3oo9ijIxAR7QDR4d49Yl
tIOseBAuW48zijTRXMdNc7ee6PuCXKmeC60PRDszGnEmEWuTH28QggO577TT4GIc
Kd1z+JG85CDQ1s2j4kHqUFbybgcqd8rImhqstWyvcgiiKK/9YCilty9FADwgZHJb
c9HfUy0JRga0t2RS0jv1bwlspEB7BkC0SzaDtCI1JptaRJGhCfzrrm74fooOyDj1
K8E3ciGDHxC2MYKe+zFFDXa4QaxDkRsBCiYVJooJz/BeUVeeAYBPG5oKsvdMGphr
B4XYWDBbExSV0jQMSeo907HajmD/IiM5gek9nEi+ywe3MYqnRQPdS5GkCWHqdpV2
NzpLsM5vZUuSFnjUyVqo3bZasudNS/HqTlegGxqZtojLWSsTSc3F3Dez1V1KE6hc
X/rVzdP49Y31XZ/gzadlsJsZX/ZSC4jyqYjLMu1x76/KXFPCI9Covaq1AiItBLtr
Wk6V3EmjfEHsLSXXKk6L//fgEseHPJ6G+jvy+YEgEVno2+sHh1ovLXOtaR7wnZnt
JrLg5uSPchZj0AvM3rE75ukcwHqtGAFAI7BNP5isZjQ7oqLHGMIl/jT0EVsFXdwz
MfJW0D1nQi4h9CX+bWQl0SgciwveysUIMv+tAc7pvY7xppM57ywCEkt/ShhK1V5Q
n7wIwjmRBDkclQziUzZ/DAAP621Yacp9J2G+3YVSyPgvFWvNR5Id23ZpNHX7cQjv
CvUtKr4yNmZmepB6lppRLILj0HL5jRuS6zgAs+hqdREW88pITkV9cXYU2Qu62qCH
npzsNurSMyosPl5ZTQiM7Y2Wt3AiDL46n65tZB1MBJWC4J/iyYwK0jQHYY8g11JA
25MDtOPfF4DLPT2UGcJoqedVWdjg9LuvUjIJbR1UxYGh7pY1es77QC5dsDDbB6BL
SuvZ1pJMSxCkhxQvljYGw5vasW6bWsfsxXqUEEhjKwP70YV5NtR2QF031329PjKl
WkXgfhhQbCjxA6+KpV+xGpvFMtv+INFsANdBARYRqpbIDEcuhxJm7vmXT6IGZuvv
N15/0UkwVgCZ2EsMpdRTcDQDKr9b0bKvfOQunFBcY0G1ZbMo8NrENzOj4em5O2e6
1o2IFCrAuTovZulkWVqtmYX01lUPGPrfnO0rQVh1xlAw0FBCP72RfwnWVBczP24R
TbUqqFXhg4prQ4oBy0PczYM4Os69FHyPerXM54UK04XPz1UxGDejXr/Hbyoh2Qre
JfBXqgAF/P1tLlgp0tBKiXf12X+4sUcE0pdMKs9lc2LL4Nte2sMXjt0X9pmHo92V
YJ3mcyJeOfracKM5ysZ1ehEQ+ydxztdXfluwSP8bkoavrBenJqIpxF6ZKejI9lzB
BglgKKBAYSYlNT7iSbm0hEhvDp4o3/4CTZS6ykp5Ei3Wx4I7BNKkCz+owTJjCXOU
uKfir7BFpkujTTbhKCylO9h1ZL7z0aLEdUEnjnKBjmWxbrg/PyFk1ika5O0Tj2U5
gWf7+xp8MQmS7zTi/GJIkNcb7hlHL20KBBdwqD0eBsNqNny9ezvwPbbLLJ+u3atv
JHl7I4LW779V937q4vBcPvwtWX+SGK2mjbmDR9XLK58eq9BifP6kz4R85TTwzBY6
E1oMu4YietQoxTfY9+K3dFTkmPnVpMxyUXKF3MhrHU/77heQKcuUMSy8KUjSCylV
G7ArQVq1MIoF0xtkaJ+EOqlrPcm2idJ+S4D2nzfJ9BORnybelOh5W7SgNZVf282Q
mNUumVd5YDgudfhLN4l3uD7kd7EIa40h8BFd/unb64dfRL8jD3a0SpdbhGDkEbbC
+YV5Wqxn/C6cuaESIofvdycKWQf0lu6nFHAu0OABrfvLnlON7HTd8HtfGNNRTYxz
moYDgWIYkqN+bOggAja25Ljdd7f/UIRT/aXEhwPEq38mGzpkncg1WN6sxZU9HFgh
kGy7nGUOURush6CDJmmB8wL8bPDi3PSZS0xgL3P9g1SmBvrAHFYJlqiIKMzT9iF6
/JOIxY+2HFBItkzxM5gApSw29tUh6UJchfmRbPmhuoexFAdaXKl9ZPiRDVxQH2WU
KYOMghp6egYCPTUjxHBrhD5pgxXKArThZpbtcGkIzXwnY50PqRB6Ahie5parZmLk
M9mkP5TwlddiNwvrrkfd/Dcc5fzLp0nXJkH1JMRlP5lAHjvnX/W7jyq0JhTxzKkV
3NrTp6wfg+ouYrdKKIJiLgz+R4kk9pSHzT0Iy/PqRwaaHE5MuGKgaOL7vN9tx+e2
Ap0JIRf6UxKnZezQd0oC2UWTTIg95oa23KXaVs+R5mZOf/WEN83TeSIhzG7pBbrx
gjCUn2jni6QT3vX9PDyO1oB6LmU9TPAPRBvRotpfeFfHhCvAHqCrVo6YKWBVQBoZ
t3XCdr8qWooyK3KAAUlcP4dfuTc7PpRvgns3A0FhgrWKVKrYR/tq+BZB+oBz4Mp1
Al9+pDz+rGLFkMFasmbRq2BxOXXE4eKz9yMLpT0GxQ1EuudWSjwbWWApx09ItHAO
jE3kUymyWTtIyLdHiEbIQj0fQWFDesyATTXqmefRpkUZOstKYAM7BPht6NMFKOSK
nFEA7pJ+kc2GBtsasVDRFr8H+0hxsHW+oth6AlWaWtxy6wWK+nvot9U4Gc57dnwH
PC6apf3oTlsFnZB4FQurrj7pa4AuvU/9sdnJaGyB6lPJsiMShhH8JZWfoX+shhvM
R9Yty+zSVwqgnAhZx05hFZz3fudXr9GO7DBJiAWCLM7jE+YCwXnGbnGzUxSUVPS4
nb9hHvrjJoaTlb+h1YE4NgaKLM9sFaV4kCkqwcvU+KPENi0iibzQZKEnu0SrExAh
RqLrJu0o5rPcs+3kKpAW/7rnSEs0701mTPqUYqhgrRUMH0iPco0+FIjS3seqUNMN
d3lHgutYM32jQLapRSqb9QPfaEyXjTrB/a5NtJ6t/InmxTvj/A93vezn+nSkf7JX
eP+TsjDkHyfjaZsY228mLFabi5tNHwiCpYnxmrR+Vlkp00xuP9Au3GGuS/vfFVo3
`pragma protect end_protected

//pragma protect end


//pragma protect
//pragma protect begin

/* Encryption Envelope */

`pragma protect begin_protected
`pragma protect version = 1
`pragma protect encrypt_agent = "QuestaSim" , encrypt_agent_info = "2021.1"
`pragma protect key_keyowner = "Aldec" , key_keyname = "ALDEC15_001"
`pragma protect key_method = "rsa"
`pragma protect encoding = ( enctype = "base64" , line_length = 64 , bytes = 256 )
`pragma protect key_block
io0tD7WdFjTz0kHW7cs3bRaNdxtdXAlioaBcNYKhuURh742yk8YVo1C3LszZucJT
3TdR+vKPscjB+RT725iDjYti+RnlR9i7DlLL+rjwPpwzfC6gAX3FX6xNuPI44B2q
6dKZROs9yPFaQ5EtLhvf/79f+EcgZrlgzKbmnud8Dq/wm6k6CnkJXZ8sTj8ttmNm
LJwToDXTvAR5UXHk9mKC3KZmc7OKbCQFRZ3fZcmk9MO6DUt8tkKQlmt8O2My268k
oUxXiuom3xOoKqkvOuQZhUqeG7UmW23G2wUh1OH5jsOV5qFPPiAfFR2oeSeUmivR
knbylyWXUJPYJNa0ustaDw==
`pragma protect data_method = "aes256-cbc"
`pragma protect encoding = ( enctype = "base64" , line_length = 64 , bytes = 7552 )
`pragma protect data_block
HyOwdNXACwB/8QTb1N8fdII9MlNY3b39ANPDDl4npxw46ewit+BBuZhHI+/kMlL0
f2ETP+kpfEdN/E8uKysupK52UrznsEx1tf5pL8u+uCUXz7bjaxToBaKn3JgMcUuW
R0cjG5g1O7XFCBbqktegMhJCdiLG5kFCu1J5YkBjIt/t3Ukqhp/cHj91aBoH77R8
LbwJYqh4zRMxE68WkIGZ5HHf9iB0XoyCJTq2iIYZ3iYtxIm2M4e9QI/bkAZqcPW9
njwnpyZATioMWzgQEgwF3dPu5/+wFIVNztKldx4/2EgeZjyr7M5yfPcMPJ/OrFAB
YiU5xjTXOFhux6KlDCLjkHDtVxfBzBXtmr7WdVegAUpgKkqbVhw5ihqY8HYAJTNR
/YyQVrtaiUDmwSUpfDorEj0OxHu/TvBMxGt/u5EM/ucjuTtSlkS+oFsivBcoaDJR
xkuNP2yVTJ9UY4ScXnMZ+bvnPgeTs3SM7t9GV8Yv87raZ5no6owVgiRjoq/4Gd/2
HIfAwc+qCXnLlp22XwKiTi41PyHu+CyNvOTLThcUN9yKN/mVMcL+N2omhK6abu5F
+a+kPwemMxhoi+o/HsfQ4O88p44wiEzgatNSuKHavm5UYepwO79xtYkcoxNriIt6
IohI0JaLOj9Fu7wqLJaunVyqFwrrjma8RK+nbgYHC862okbSG2sxnwbP0uroRwZ3
HjTG9TQB0PqgxwC2a475qXQlrf359FBhCqUlPdO7kIoKfJ8X/RXOwJinylbiWqSK
YB46W94qPmJv36LUlIDOARgVMebkSaMNq3n5yIFDdW1Cay06sLFW9r8ghj3dttJy
PKieUR04Bpy+FA0tmGNS0S8h8Flt9ENVFValWK/3rXokcyfH8QJeXyUB9QNCcdEg
3ZjAOU94GFu5CsgtNCsALRkFqMiRKxeLAEDaJ55GuWWu14GrqEsOvLUSiJVmZnzz
MNdKbio4Vz0Yc+xUZLHlTgG51wRp+6evQxBLM5at6zMkCvoCmJuTb/X2KGwtOBP2
aJMKt8zinFuTcQ0aoeY+fjJ04Sb3iQ9/VULckDsq5acpSMSFr86UzM7Saxlm3SA7
C99jb611b7FHgSbM/Uoo+5G0p3Dw+wa2tssCbPpBlaJZ4v7C/01Sx+cpsTlWdXSn
5xdcSTxT1KOGu3CNe54XW3nZowI8EtHFF3XjCuUnBKfJIUjn0EixP2WEdJf8Pl99
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
W4Zf01MxC9JJAz0v6HDgkA==
`pragma protect end_protected

//pragma protect end


//pragma protect
//pragma protect begin

/* Encryption Envelope */

`pragma protect begin_protected
`pragma protect version = 1
`pragma protect encrypt_agent = "QuestaSim" , encrypt_agent_info = "2021.1"
`pragma protect key_keyowner = "Aldec" , key_keyname = "ALDEC15_001"
`pragma protect key_method = "rsa"
`pragma protect encoding = ( enctype = "base64" , line_length = 64 , bytes = 256 )
`pragma protect key_block
eaHcVEhFBEHHA2XT1/JVsP7bbd5mysKkFa0JTPMxme4Ikgpv8vWXkCy/0kYTa5xc
P4lDg7I2Jq0kvgDcAqWQLNI1LvFYnIzOu2LLcawrC/Haxnwom211mKPqcA/Es8nR
MdH6RWhzwXCuyVPVpzE6ZB/ZO2mMSA3tA5D68neJgIYJtMAVk0YT8q44iix9WxJ7
YUL1S0ylqmDuwKBiDc0GgP5yotY79nw3nth9h5RCJjQD7XKeQDGBN4lc2dBYuqQN
njJ2+6vQ8Do6aPfmvOfN2fQC9QHUOjC8PU6syKgq123xT33+llNovIoG4reeTOBy
nQbPi/teqtu2LqdTvYwYNg==
`pragma protect data_method = "aes256-cbc"
`pragma protect encoding = ( enctype = "base64" , line_length = 64 , bytes = 18000 )
`pragma protect data_block
WBmIeCNRScA3t/cw/g6k0MpGueMIDKukJGbvVgWOnyDh1dF7F5UmYXJFFXEN6I4a
EmQV3I9Rverjk7VVwOK8qHU/qAiSo3z5N/S8Mqm791N+FEjm9h0X26NGSGNQ9WOs
R7lW6V6iKo5iM3Xb++G2cWAWH92bv51A+Jk0a74W8+8geEnXxk+dNR1DJSkbKNc1
CV++xkK94NHqTsx609xaBUShFQCFFiHR6RH68GoKAaymopWF7SBYRXqN3dk9v7AQ
4d/f35KAIsUo8+xYRcj8skJ8dO49rs57drbr/j69Zfxr5G5bthP1uvK5RWmj2yWp
ZxJjRNW8+sbAiPzlSmj0F7TQYQ5b7gZKx5vneDiBRgXPlO+oTrLloCAIK0wTmeTa
T0oeOVgDx5xA+3qIQbxQZMB7JakoWYUoIs1j4Cd+kKVoufD0ETmI6BapSn35nTo9
ZyiPgoskM+qMhb6KAs2jjl+nI/pUpduO9T8LL094AtfxsdIWgZoG64CxqE6k/sxQ
E7XaVqxj3XaW4GSIsuAU7aFL+IHxSxNz4fzm4K9lsJWWZWd6lkKOjVmOQj4sBo3d
3O4CZPdOPBDpwotEJ/gxGpFD93ImACqrsvLIEoNofV6UMOSsjct2HRHCdNHY+GOt
PrEv288oXhtnwQ+Yq+iimB0T01UdXsf0QSxtuNX91aHc/cv0iUaW5it9zK9lRU84
RYpTnSG7JkM1XpVohgcWj17CB/x5vGaMh5B6tiHlQAZ1q2Qq76+dkz9wIWZLwfq0
gEhUyQtl56dPk3eZP2IKn9XnUeJMSpng9MiQTRTXcCI2oU3L6Vv3qIcJ4kuUH/nH
3+qOTT1rN62zd7W1U8AKRypnr4hiI4+JEjuZM5MWRR2geJJ6JbZKNasg6iSJ//P4
RUhxqYAcoHmtg427DFY+fAKT/uuRACiZreGCqTX5FbbCbKUmZK9CnAoxYZHhual8
A/6fo+xDNZNlpmA3itGsHijAa23WDd5GA3tBTZH4Mta4FMpIf0YV48GjUq1C9f2O
S+83a9Om+HdUFDpxSr6XVr/7hqnYePUkJqxhUUQpNwoXGb/QRJvXV7Qr1BHmdbTR
bR8SE8/sTTaPahYDpVBdWF6Uk6/Is97hkzBMiqgq2gu4TbtypLlBUOz4iBNc2mHO
qi/mqwFGdQpuTj4ftv9kPrEEmpUWGojW7IU6lahIt8qqJC4uAaPQ5fzwv5r54X+R
2/1ND4mW8wWNW4Ent++0oQ2bvOLglV4Zs+3CuxjW9rTciac1rsaadNMHqaMa3X/m
GIqz+Nz7klLUUWhiQgco5sWYkwSQTDLgtDUe7buuxly0fHnWuTD2j1meEqpbhNk0
6jcBto3qrSaTH/mB7Y9q3zC8Nutrpg5wrntEaprUJjJ4UbOHH/sQr6aTjVhKcK5N
g8G7QqqCoyVAS0Ypgm5PB2C1J/C4tOgX1I+CAKejioyttPuEIrQPbXtQVeWN1BFX
aUb3ApBTYl52EEiRFAbkIGhhSJcinQBHsE7XJE+vHvrVxbS0QLuhluMVbTMuksR5
IhtOOYDlWbLsTbS9NWK/QfE4GCZ1IK7S4HB3vIjfzFk15KvvnRiK3xnO64jIWJq3
YIL6JdBJKte2Lx4OpFgLLmdwbrDkwg0loYrpp626E8I44POO9BrqJdLfmueJTkKe
fMACCJRgXS0bCL8F9va/0VlJ/e0lcc6PRtA8R8pkYW3vIP+zzi5ygDp/YdBy4hCv
l4hwxiNgPxMLz84xO4Bw8RknMW432SIZnx3YT0DAFsgO7s4McT714D8ASE69RNCP
kitrpwaFL04GMrxUU9qCnnvOPqgIKxudfi8vWRiFTgb8NXmCsIpG+bQ+mlANKh3o
glsXOn78W30q16F5VTt5tC6jazgUiugnfFWGLB4euTKnigSL3sXlBtKLOZo8fzTu
i0RD7f7pn3LTppgd1Taw/p142MmV3wxJjsN5tFFjnBvL0jsd1O5vAsHq9RMUTPFr
JFNbaUBKXXTdhnKYcldrZJEIMosgaphV1gaOkX7nJAOI0DXWLgM2BLinMOSnefMD
kwOIk4+7OFekd1IS6pIoU9GUjgwaChbMTqkR3Ks1lh/s3C98grVC8twItWW8A8Rs
mzDsWpUxcZICaUFHOQky5vcnffyuTqhvc56ZZ2gQK3X7IZU6XmK42timi8MMuwYS
QLYHT/krBQgxGmhoFZXCjBnQ598QLM2EQLlddWLl75k95Wr91uyvvMOF3buJ9IpG
w2b8AOYHEP3Wywopycl9zEZ3xgxP9sb/YDX3w9HVTpT/8P+WqMwn5ycq7YKF/HdK
KIaNfvPQO8jTKthlR6G6xN1nJ/AHiKi1COCZMTQt1gWvY66y8Gy3mo7I3fpnBdZ2
gi6DdVqNqMBmA3Tog/NRfDnaFQLFyVsFTaMhG6qq9k8+HFBnT8oZSErBCjY9mS26
WfClHkpWjMSzNx3FGgO9SsTwTQRho9f0eSZ9+Clmady3mc0L7siHGCREjadScRKe
XaSMkAG74gE7J5qnfg2DdwoGzoGD23YO9CHc+X0N+ajnXsg5EA1bfpqCBtmoUchX
p7mY4f1+hlFwC5FkjppV07r/eAw29juVXXnoHZTuAFFHkvv0+/GQ3siprJD0ioWj
DdFKMOU79xmdncRPZovITPDxiqireq4Xgp+0GvaL/3cN7fRj8J8ANmEp4N9mkzPa
lNzEl6VmmYIa3XiK5Am5+OBqHv7ut2vct7CgHGMI5SNuWGuu++p/OUfVl9QY46iR
ai2hEuEyKxWFMJk4VwYYkbhUlMXqYoaLgTViNLw1KjMYq3zQXQhfX0qBYlzBEwm5
kJLu/J1rBEcXrYmkvhpy3C+SgLK87a/BCS1UusqhXTqqkEMYL981z9BOjWJXbXKN
yymbkYuQ4Nzma92EbkSwXyZ+zRppB2iBq/JdoEeo+xoI/UXdzTO/4374gyMdQaI1
Cb6tBfNCeE+q8IMfTRlzhX0PCNv3afDb3Buer7WdK8R464I8u1poyjyDm/xPrH94
sAm68uVq8EF+pLcbCI30i3ciCoUbLyRkGIkUkJy5V1Q4Z4pWnV7gHvjR6jUJ4VpK
sdWOrpn0J2QPZ970PJHyQImuEhHvRA2JW78MO90YdNjwWaX2DxZzn/UPcEu3PHOz
wTXfpzsuSbzpfGlfdpu+Gtuv5hVgbkPyY2zN/fQY8wpaWNQKC38n7fpn+tiy8d6P
jU74AvOeIM7Z+xH9dF2ICCweUy0xTGN1LifaRbqTo7pKVBNmdnrVxCpU9B90Hs3w
BE5sFXANuDfjUCnXU5mwi0St8bcDOBXRqaauFhyz8URLB8wRkI86GBGF8httadt8
22vfIVDXBnK/v79JGz42qvuB292qlH2DUvop9jnvx1oqpMyY2Y3m709JS40ksjOV
2OK0f3Jp3xb4aYZWWniZ5i6A4FXt9R5X6KMA+cqURTNIfY4HO19VDj674D2NMyvR
43qOFSTSJAn738TL4gVOw8lGVWCjJ14tYOKs67iIJVVFM/9073u+ZZsdMWK9Bi2e
SQIunxi+VUJhusCUmX6hJRQaOCH063SdiZQRc3juf/Qco3/XpM6Nw3ppreI4+oMX
AhrqwqviI87UFnCbkjci4yWXyBmgSqMAnqO0YCoEZDhMn8lRNWLpeZ+LdAZhD6dC
q7vWrg8pBibKvN01JuuKmmCTAs2hxYFi6IBIptJYYpOmAelQqaib/NPuwHoB5MEi
wku65LozYyoUUaSeHDplA+7fH+NnqL8O33sdK2VZQsLbz0LGxRtIzs2RZCJtDpKh
u8I6LGAU7AcQHx8DzuoIxG1q1grBk3NnJvfy86MRBSJ0QDZ0p0QNDMyY4SCpQIf/
lFM3bV9rA+CERnqcjNVOr2Xu9VBPab7CLnUCHUw5lBg1n9uAPYdztIO71BMiC9KQ
epi6N4iyZA88pjglOM7jERjHLfA3Ip4y+nlgbXgCc3EziuzItQ7ISrVN5xhzA/Lo
S27J1KRBkobXW+FUN7DxX6xiyQ5pxMx5vJ1OHAEeqQC7ViexRs+4o68XnFpdaqUC
PS2vrDxBRj/S/TuNqd8XkQzLABtllAhgMNwCfjRjiyyLcmt4QI3Phu1OAZnTRWOQ
fy5UcQ0hmN8DbnAR28GiSsqtuvJv3jnRJ/dcMO7PAuL2KqGme826AVVOQNDMq5Go
p4qn46ZMU2usHeg/cZ6VCtoR6sbkGnYyhcErvESLR/zqvzAkGmoSAcTKr7flQqtX
iw/3mTqnl7ZoLQYaf2M3tsbMPG9zfQHQdkE5cu5MmdlD8FYTOKwqRE29D1qMU9n/
d6H3A4Hy88gC9D3qfPDu3Q6xq7y2PRWTDrhBvgia0bdwSeXGoAcZnhkJSfvSP44T
+P7APKViecIs2fdFdCLMFNDKRn1Y61MMzY7nsNN21zcBrufxJSmqyH1hp+jOJ+Ni
NDErv8kBKr0R89PKAMX+n7lLyvITSR6JCQ241CSqz5zSwfRN/e9phMVQoYjYGBje
e9+nZPLKx8h8klzc3xGxWGZHYUhNDcp+BlO7whERC3pr0swFahUtGh0YADqH2iRk
X5/704nnYq417y0jTbAACRYSp5mzignwSWmUYBfJTkAvPuX9JlNCID/pj/HvkNn1
CWYeEEk8qRG7f/KfKwkS4ktgAVV8Cqi4mV+tIVmrOIFVHs12AeCf2hb/OQYGIoWg
Per/waQmTK+Tub4goes5l/vatx+quYAiKL7G5NhWg/mzU5tzjyrMvydYPV7FZmDa
MjBpHiVQ+Bq05n3shIAhhF+rmdLZFUQHYBg5NlI/I7Sdr3j5TLc0pH/fLM68zMlf
o2lPzNwpYutrwqPukRWVKlz0y6tmnpTWIAhCQJGl/UY5X3p3tad/m+t2RCpX4m6c
zIKXv9eTbHH6N9/LlQP5exYKJ1NYxZ+CcRAyZ6GhAVvgET8qUxEDYBigKSBmBVLc
SEUMER3Yg80y8mlkjcm/fTWin/Ir1BVc4hodPCsKbfNGJu6iYOS+Mc7vccwb2qKf
Xrycnlbiz04ymP69KnR1E4uf/1aZzQxPWQm6P+jXNolrVR+z0WyynH/a/G9JONkQ
lR7e0UaY6kNE/z23lF/335jD4wfQx5XWu3XelXeQcbGtKmGqcgH6qhxY4N5pmVmH
ELAAHXwluZ/X0D4nZYEb1gl9+3wXBcT1fvnS8Jddc5QlO4T4nlBQKZuvkVIX60zc
ILFpqtIby0TsVjBa/IoDnoV43Rfy1Lh1607lncEwrjxK9R4lE2b2upCXsqnYvr8c
bzI7hlnt5UjYVgf6MDKL+9/qHUAD3R65FY6R6fYGdqkxfnE4rCeOyzu20QanlwDl
ZxMDQJRNOcphrIyylM4ri09mnd/QM+yXE42Y1i8CxotMPfawbqX8yxsl0xuc5Dxt
GDvt3uwEMd/fA//16VbwXr+CZaTPsz9eL3xewk0ShAsvSeaDdlR2FdVOKN3XG89K
afxOE8MzyIBQnt37hONxG8ooDOjWISbU5VQsEW0G3jV0A/tk1uhx5U9mXfCwpDNV
lkoBX/RCqvZF823FA2Js5N4D703T3fLYgvwUcmZIeIXg1RebroR2adNuq/IQccQn
PX8ty/tM1pAmH8o0N3omXt5et/azi5l4FOvUQiw7mQfRpyBlNdB5+z4coZIp50Xn
8xQyaae4FRr2/Fk11NanSBkxs1KyZATab6Cn/R76HZC5GjVeMVnlTAZazWftLZyQ
lNlVWF8wavLw+GfjVGAAv9ChHUVt2KimLtjMb7QgOk0RhZw7U5J3a+MaTwj8CNY+
RYHrQChkH6Oyn/J6AIMacQNgDNYrn6B8vwNsiOCsWOQpzbnx12QZUVEjlB4CSc9J
71Xb8ABMrHNg1U828UXMftHeUY8jSTvCfwDfq7by8pt3aP7nYG31swtcYOLoo3HZ
mVc+VICvM6WCRVBfIp9l7ZqnMyGG+RtEspTCag6EtTPfn3v7/VC5analf9TX5yXH
/aV9Z3dX+ih88bDxUwG2oYfRovJuT0df5aK3tyXcw8L85oVTJsMl05mV/q927lBQ
cPlaiHZMTmDGQLHMlZ00L1jfqcxjkwAAVNikHL9dR4+UAJk94afiCMgqAECPrqsS
9bjTfDTnzKlHgoRq5B74DFplseltMtUbz2gKLd3MtCu6XGHopLIMltpMlafbtmDs
5xxex1yXdXJj+YX8TOMTCJB6wToUpLEzEHf7W6kR484UURTzgzqykjoXQNzl8rxS
5C+EKDR4UK85YqQEmDzUNCaW+oMU8j56kQ0tmiJZi0yXAaOKDGg5goqr9CEe9N9r
ysgJi9c6GJiCyIYyy6MkYdqNiWYqMMDxpO9axu8yjy3eby+picD5cbqHL80ac3n6
RUrRR71sfQVRim8csnjkmEWw2B1eycWqttZWFxkp//Cxv7nXeu1RmkNgotos54Nx
ZWSC0nZrRUlnpDJM88QhZ/IntbTzozPdRl+bg/guoEHmcLND0pf7XLPHjTKB/d9P
nPn/I+WQu3A5lMZ0Wj8BQH7H76Nj8gUs8F11xfrkkAW+ci9K5uU9xdq8FzJR8O11
Kj1aZSv31bUdb8yQxkujSE+3/drHCDgFjYuW++TSF7mMW0RGaQyndEKflByI5t62
tLBFo3bUA4gMwCMQxAgQXF5aVtYi3zxIGbPryyFm+4chWmv4lQlihHvFZESPubrs
yUVLWIJIXOOdnbqfvrzk3DDTHEQ5yC2t9PcUwE9sMCTM8MNDtX8Zf2VfKE0P+brB
EkeHvTTGrn6XY6fhr2XUmcuMBXkFlnuKkDa3HLAtecAejzhiv+27W41nzHWZHfxt
03FP00Bf8IyoU/79QRuXOLoyOrxFoNUANVXC/TLHzfJOf+MXkGAafR6Ap3gkXv8A
Dxj6Fw2s+vs1a8/ENNvvf/cxa3bDrXvya3KdfuxYRSnB5m3p8YV1mhqm5ddj9pMW
98k+2ZaUnkv7jeQFUc+JUpDHELjRBB69wcASJ+hBt+WYUI7msDOPtC+EMrBnlA5e
gXtopXXcwm7FmDsHMoNWAcOegu+tKDfVAa7H3v88DisgkyFLYmQlQHC62T4w6Aw7
ApoMLGuTqfm98emxo/3W9jROD8tRIVS53zOY41B2BzgbRw0d3L7BaE/vXx9SxgOm
1/3G07DyooKkQasvcOk4YaDGCVwgdckw39qk/0t+mjGXaZbJmlc187rkLOniDj2z
gI9/+EBwRMnLFSH6Ust3qlrLKuKv2qZw/0eyhCGXO95nRb3yrIsXe5nRGbMQTZwu
YcTe14aQxtKJH2g1UxcTI46EwecSMNrItYo/SdzoajQ3jeegzWgzM/PzsqQS9HyP
0TqsoU/okvWBMf9puDi5L2VGHaeYm4PunY6sU2+6qvo4DriC2dS9GYjKrD4SR5TM
yE3Um3i44nUV7hZ2y0l51Q+wsbgj+bvMv9wfuXjaO9ZWK+MvqZlwtwCDQli4Jwyq
xh0wCiYePyjku7huk1MOj7POpITYDVwYwDZpbAhKR9uoYu68x706/zcMMBUHFPs0
b8CvnON+W+hOXk2B3NBrNfID8Yi0CLOuCAW3LCdyCP5pWgXEnYC1WOihw9E3Q1Br
zCcvZ21ybwG8KJ7tthX1vivT0eLnX0UGpIfxuTjfdBbkslMvhp72T0d6RMYnp9pp
nN4zj2raFJXqN7Uw/ByLl2gxf0g/FsBMXReL6kdIHuLAwjR88JNV3HmrRh4mHmQ2
0snMxjSJCJ7fLXjGxTeKjs7WuRKCS6hoyhbvBdV455jDaIM/YerQVfbGWLDvg5g3
zvpGZ3zH7+VcOH1Iydvl7EOv57UpDdqqkqu/r0FqmS9gGAIQSUaoz0m+wnCaVtuU
OaAqv1whY6JV1Y+1i2zERkCZQ7G/dGX61k07JZoZjK6elJ0fYVo5ubcZS+Mnu9Ah
tykOM6yskoeALB93rTIen0IyYOuorwuVAFMyh276ZtT+HNlBX7QwQx4SonJhf8ja
N+wC5J7AW/oYM+CL0HcM/ps1tBbdNbGAnPq6MtRbP5UDibUjMDAwF7VkONvQKe38
SnEIXD0L0aCVqejbKQaMDOdAXcW9jjzVnbs4PbrOug1G8IMFc3esYZYBGP7fOJL1
7LlbvOUNgV99R2F/xRPMlVIEqOSsI+L+tSkj46v/QOpBp832QLPoacIiVQGPZXux
JRB++7iJcdcMU+UCHe+W/bQvRyefOidgLMcvlaTWKDHdpArHuD55vUB/TYX5zlEZ
/aIXKItphzjfqXkpwdbo8zHsIvbusoc3Dc8Y5Q/snKiY+7KYTbN+N8mWWyyGjqes
ADiy3oQp7WU1JQZIx3lgB4LtaUC9ubNCdAFBPVAObIW4H8MU2ZilNae+qqCwYfrI
KPFqvpH6QnNlWR4R/7KFVDEwTI5DvD6D4ZYuFDTR0F56ZgcKEfAOvVmDEoWdK/8W
cTPCPXGHkrSXQELN2cjtoR9BlqBc5LMvCPNVspALDOxbF41NBJJA5Pg4IHXm77ti
wITV1IUSqskUFGY42TeCm+IE9gPurLKfadLdPGrlH3JTIn8I2CmsvD81SKCPVh4d
kuKShdXStVGtJddopiU0+fyY8Iw94jNc0G/OYSOw3UZgXAuY59kmrkiw/Wf2ZaBk
lbpZ+cRRfNK//qzJKKRHhlHHnSexAv4a5/Zj3+l6NMUATE0/Gev/GK4bJatB2Yy6
N9F6My44zltiKXGsSP5aIwHtS1G0/i+gFZRKmRjfpKPxKjkf+rrO11FnOG+Uwebp
kxaYl6x+AehfPLEgZbF3uvjLRdqFNTdKqTbah8QPtjStwIhL6t8+lf0GIbZeaagd
gjW6XJHPxsEMQOpdUaArr9nOOxUKOBAV30MEwyuNDgQZa/QxbXAerPEJp+y+UXcz
hlBU6GDA3HbxwWZbQOLeUr44jS7ZRtiImvjs27fNSVcE+LstvrhkZ+U0vsQGhZbF
BTDGF6KNzk8LZ0FcOAinTUkd23E9tN3OVmp5WJv2E+nrR3aa0mv58sUeF+33wmW+
3wgDtYF40NtznaGI5NYArGj6IXB1Q44zxn2pRP+YDTVLxd4EFLwWNELLgPExvf6P
5tZfg4CkM7d17zaguMG4p2Uf0eTpqBnvfYDGEeOnc1ShkBO/yqTUa0wTVcB6qlAM
acG9z+cBLagmaI9lXQpb71xrYB9eYjH8l9bEpvDKpV6ZS1+yx7P730wWNKkudStm
x8BQoaM8DvOk2M33TDLA1ir5478OLPgLCujOfnEkl7vaNPBrsDus9WyfWlu/rgoi
rsoatkFxab8fyoz7KFeg4DSTwTcBMfe4JO/YbWd/vCuxhc4MQ7p0LjRoc/hC/37+
KmoTY0faijwrSWATlreV6XR4iesZbY8UDDQ3FXlZJ2V8weIyuYxZC6FtKoWx681d
hbrdWLnQ+ISfWMPWcdwk/G7AiicVAllZ765alcBZKE+vmnRvQBkb2XTbZ2152ZsE
OXPtZHZ5Hgr/v0xxvw7waL/JRSaCxAn7jCBr17Ias3JDqqKFQUHAptdV2oEzC16m
ry94UKVIiNel6O+zChBC8jlKCRHL+VF0ycGlHQXo4ZOr4e2TVte5jsiWRYl+zgwZ
BtaB0XZMn/KS38qGAnfgF7l9bSITf5QmYPvkC+Q9pqBnbzmbtnyjdSUH7KwyQ5ap
sej99weE66qEiGBVdUC0DjfN9Pxe7ph+DseqCWi4N0Udn4TNoPz7UJd6DHIIFZtk
Dly0AKnhqBFd5FP616amymlXGhfuUbqzndyZMdYbS4sgA0tfmbGLsTDqcM1zxFvc
SWHAliMPMkVR87Uupvz2ORtjk7GFmg7KRg4m+9936P+nLps70Bq5z3cDMjW7PNy8
w1I7BE5YhLAK8fRnJTdhB6K4Qmb9Y7LKgRim0uJc+CubKwRTzB9p52i5VZWpCPxg
oUmA7yRjeUCxz0hyWTBg2aC8Fbm09l5nW8Y0MpuuJvsJ8uVK364cmPKHrC42ATMT
8YrJ7FupgGFlx3jUQRZr9a0v7JzZcyncw0hUvfigfU9XOdehIUewEawZpMK6lQyP
6Zrrs2djNQKSIm0yeSbf0ClVV76cHZcxGx4Y9NQr27/Edh+uleGTWGGubbBFr7x+
qj+7277stS0rDhmyAh/sapHB1EbJ7dUdIcVqRSmCCL9+D+A5RdcPVxl8nzqB92Mf
Y8/rQTyRaPoFSZ+6Gp6BtfxcesmNNw+B55fmUc7NOKJ0ZEN2PXRP1Xf8nBro4sSi
3gBcH7tgz6cIqFkVovdpbzf7nkiTVbmji/N6UoPscy/69PpUbq7/FRQ8WnMxK+Q8
RacIhHaWMIuxQDx+mRrXDJHjrfJrEJJXVeiLKrU3zENUEpFqUEHV6fEIio1h0TUZ
CYRbUGYLsuLumuJg/V8wjRf5Mmc0PKmQGkzXYL2Oxr1xE4pqw0ok/8sLif0mPjuE
0FuqdYtSintMhLnRy5KkVEnVm/wQWtvgpGlxeWLwiLUNffxOacHgUBhl1ReknBnz
m31OYN9060ZIVzgLMAX1PNsVwf/bMNyeWeObl2eA0WJOlQgm8ZcYzXmFliSkczk/
pLcnLU/QgEUgtVjcAxoV6JwZJAU/cdIrObq05SfcBcYVRrZj9sRi8Wu1/crbFtec
u1IQsz+XzpcGe3mrtwTw7C4u5U0fIEh5l5Htp1xYPDGv6ak+2/ma3je5tcNtssfv
8KF7nV2GR3b//IDMopV/vVxPmnc1NbIfWWbNz2e623ntrMd8nt30J/7cQGXk1BPt
Y0sRcBhW+yc13bYc/Ntfi0DF5TPmTMgk200PnqZsSQoIvFagSxowUNLT8409wqGN
pWXDSJiOoMhzrn06BCI/uG/HCdtwgg9X0X6e7ocajPo+/nghT3WJ8bMatiyFN0wu
msoV1f/ZDfFqumcbTS49tTBb1O9QQws7vOKpGCpYTqGwngMX1x38rUo/jTjTaL7O
kKAzSTSISpMOoiLRadhtjYY2rUrjq6jQpspl1zPCHScQ9J5ZXk4I/5iAI+HhFbs4
M+W/WaizCqUtvxzX3FmbjbLwWLGG8oKWVWd+vecBfrQ+fXKbdEFTlAqHZc08q0o7
TFmvp50dYnqsx1SiY5v5zon1wB/yUGD1C9oAIk1Wgl9cQx0Z3QNs6IhXmgDR0gBA
vMydC9Vz4J1jWqlTEqgSU/os8zDmARUQrt9Aq7J6GiygAQ7+LgZ9A0xr2WmnF6HU
NPlky7JhAO4PJXePLDx71KPVbXUvYoNaPtd1d48/sQkNwAa2ZLcadSNYdE2Y1s9X
S8ABAWbwtIbljC1clBXWbf36jCiEDpJnnP2KIhbtdM9tbSIpQjiAMyHY+hvN3cQr
WDKjxux9sAHpQUSKa8YhUY2dEOBSXU+sVsMcqmN+lMYHPilBWDwuA1W7iZcP5PI1
UbmOUEfZvVkYoon7cnSTcLzIZLPIBwnSdqNHFafj6lj0gDA/yXZIMDYTLSMnyHbC
aD0Iz27GG1bHgYmKGR1beXXod/c60ZJx2Sqk5qInPHfEXCS3nUU4SnmcSHQyWp52
zAKcUYzUtTJbXbX9yQvkah5QroQaOnod4ziMZdYxBA3mgweaU41omZO4/gLPtwWg
WgZmou5+y+6GekUNYzxEV5yiNd4kIqf5c8Vi1WMTJosWW3oIjT83oz7wx8oGdR5I
N0ABtu2apzfCQC9ixgRJs6uiNwlFZPD2n3UBbemLMQMdy29ke1c/fXQwkeKTkjKA
21fVMi+MZycV438XQ1e9vEdfE7lNTNQdwbH5kcytK38JbVeZ8QFFqfokCqfYIPvc
1+b0vkWRFNl9v92bK7+DhY4SmFOdpYwVhkBb1PqR9OWFRifpGJp3e1uwOYlazfUQ
rpO1fcE3kX9779IL7mC3qyYDTlVUk/PYifD33dMTrWuiuLj3GO8m6F2c7jskcJbH
btlvSIjLtD27TMJixIyoIR+fxSN8iZpYe86USZEnGvhGdRBPPv/t8gr5X5k4SbRS
Ct7aZCZ3M8NS1ucsrXFZeVYTCFI5TtJoqYV+Y+E6fIrHsLMcDw7ZKLUmr2KnMRy+
t16NPmUBiIfRuMTmaTfuYOfVZNADdi4AKJhgVPHKGsKCT61sDVsHgg8Sy7qxbqAA
z97O6EducJmaAoIyda0SJaBcVypG7GR5sTcE6Ti9Tz86ROwdKVS8up7FGpAUOiIo
SWGnnP4keauBQ6F6LI73ZcfgMKs4V143f/hI18PqA16ZekA8o6MIsaN8mjN8hNbR
khRQp9wEhZjv+//Ze2IVJZEv6s3eNJDeWEx2XaVaRolSmo9PZPjuRvejDB17khgl
kwB+Sg7488TOsHR4JU279a7nTGXs5bX6+lX4h6KyKD2go5aYVOEPg4TDdZ1YJIW8
XqaUt+QL+pvhvORE9NFePlQWYeiipKTaSTvFWzKc4FplTyT6CH2XlwZMx3i3bxKK
ni4DR7Am036Oe9S20zwkLLf1j2mH6y2JIVtELAVFgtoXkN4c8ESoruIVnNQpO9Sd
ffpa58JuY1DGQRQMaJ86+KrSWu0xxAhbm+B8Ycv2fXmptJtTYbExQEZH0M/DxLtx
emvRhEi5pa/G0//jvqanouowHvcPXtiE7EqWSj/i1SrYqflYc7+4pDGx3UVc4dDa
qZwkTrqvMIlCMKhtt1TvS2epjcqCG4Ym+ShzCzKNrzydSSbHpcVX3wSM3Ck97cX4
6OSUCL2sfmy6cnhQm4Jn7JyiKxPZz42nORXldIN66zpQBXKPhJcoBBJsyxj3KarV
4u8rZyUMbevuoQBGcmTXtM+MNxefizKEPjkcRY8msXJEpIXAwfatAHOy0ye4pGum
ZcTstU/OWsD2Hw53ndnATCTX/wlW40r7G8R0cxKEKY2VuUiEJ+6GUHfaC/1S6Sxe
Y9tcnI4WK8gS3jKt51K4lLDevnHMdd6xPEBWbSXyAmxHDELeRBnBwXvTNgG3s5m1
xYL9Tr50+pfh7VkTdtyzvTtwpkgKViMJWO4V+9OVPe1KHDfPEgwYyPmk0OZp/R3b
FvPtW33Hy8luHwWpYE+QPGNPV/mkIL2SEzAUzX20D/7M0MQd9OtGhyzdZA6O/E17
8xbHwL8izkUlES6hlMtbxmgW43/Klj0zDZbRRrWyqtRY/SrI491W53HCs5rWQoqm
u6IiRFuiBY9IJcpXLRw+dK26NpMjN29AKkUXS2eR20Z/Am+zhxnxYrw4rQHs13n2
ZWPlNiJYwF0BMwwO+vYYNA0AgvGQi4EvjYUJrOkVkbEkld/8e8ZVRRCnUq8C82J8
B4K8YX3/CrCXUinegSSFM+BYVuMwo8EtYGW0j9OgLQrBwFRMfPDiqMrXg44LG7nl
rr3ChxRvm99BvbmPpJu9zLSlyC+2C1Hsfd7uz83E7ef7YnX1HM+5N8loOR50NVQV
VBMEdFEW7jq3jLDUBDoNSxT09hfhA23iJbB23AAWRCHdxQDnw8GM3FD2HhgKjtG9
WnOTVvBOFnz9fyNw7ztPZdZ9Fo+8EMJkx30DBN+jl5K3OFLvlQfIzwfN9LbtafJR
kZHpGUSgkIbeADWlVk4pHLPrWaqm5Cj2tJ4YHAoZEYVLdSBtIGiXgbIOLvw85uvi
CZfIIZvfvBcb2n14kXQRX3+hC2hG7DYKKwtMXbe/BPqS5PRyocAVQzAeYXwEVFaF
4lVfmi0JbvITkFyfz++cNXDyxggeo33c9JoP1aEoCRaDzXzxhksB6TseAA1bS0Ol
AEcyOPoqvmsbDtix69esXb/pPUBVeAexCVcBaWsUEp2dfvvHdTbthOEz0yK/0ZQn
5xoQLZ6PwzeGAqAOxlKvhlKAuK71Vr4qRb8Q2hpQsufKdyQRqnJPJqYPYeRx534H
xRyco2wBPGVaeeoueFq4dMdTNdkNaJlvCpZ4XBFUKs4GGPLBHVslW9lJRdPTF+9A
2dnKigvYqCbfJRzy6SkFuWM4iEsyX/9tuswFvfZcymYtXLBUkhXbzaDId2M4ONuH
b07qUI6GIUlqqLLrgxnEv0eJhlvtws3AgcWqj1QHyXjPznkkR2LW6Whz/sdOCCF2
SNh65G4k0wj2JGavLcS0MM9JkGu54Sv0LsSPkwA/jJlud4G0QLiLUfraN0jIdW6s
hdwIRyYISKYhyX3h+qtT0TOAac45fzaqL1t7kcJ4wr5993MlZQ3yYaazEOKX64mI
u8WjIgOvwsTXlHVFbbQ71pe9uGLQPNXkrmtRNBEBP8NtjpopZ7tiPvJw//uCyhc0
9Y3bJ+YJ/3OuE0dyyOTcWMuPmW/YW2zBCwEEyxxL/6avGDFOcsEWGJXNq7ehKeuh
SYZBZLL/YJ5ocSq4Zd317kGPbItjic99lR6J2af9/YYRFnCB++uhw2EBNKi5ESgb
xxBdjIrPQHMuzndBxrA9y4ck6nFVX8QF4B2Rpk3IeMiw6TqcqqdtQejP5ZpQqf23
SYMpdbooblGVeYrB84868v0+pi6jp5Ynp7ywUIhLNfHuCZHRPUE48sHb4ITeIfLz
pDWRZYbJDGKTW87MBRvKKQnYAFoaRuiZfUJxS0zVBD1LqSRz5hgths6WUCYyn5OC
pBdu4xO3LqA6cADwLDd4XQ3d47+j0iLE0sl3pEq2hPJ9Dlj83Q/OxLXfr2ZKOP1v
iW2q5pMmDOpg8GBoHKA3VDOzFWqAbSaW+uj/JvOaLubJZuCzWu0Wf8eI6kNGAVIX
cDfQVBXMfZLKnpaVztTCCxvviegoL/lrLZbOr2EJIb+WhlGTzaACrSK74DCUFBQn
Rw6FkQKRGdKLbf9bRkVGjwT+iA9W1i6zBG/rAV/5hyKYcDetM5N5alclNogVG9fK
vcQTyxlPk4z0zTPpRdnFHukejg4y5ua97TtW84kv3jeV1CFp7nXvgOeiLBCnNzDC
DyZnbFO8cukNTI0uqMGPZVqFqWBlRAsKqmIdDwriPEm+JFLP1oebPzUbGu7zz/pI
01THmS86rMj2xvVSZWDvm0tz3x/MtKoRNCKSpmJwqk34aJCpwPLqBZtOi6jvaJ1B
RSRjpu8pCsPElfRnf5NvVoqPyGqzcrAuYvEoOM45hlgqYb29n9qSkfPSDw11RUzG
PO59NfKin76FpU37qGYSmMx+DsyFvzKh1DstL+cc/vXBHV1smOhJXCn/ugZ/rkym
/yBdHQMY+t1IZvvjhh2GvsrO283kw68dZCq87tqKEKNjsm8qjiX8NPBKhvByfL53
8c+v0OmJn1hdmoxCNsX0k1tyKsKECBzpjt6NAnf6bU064VKNXtLlbeZW3tRnTYMo
Y9rUEnpJQieHjB9GrZ+BuL+sAPUMqg3U038BgGmw2eotfUikRVlfjxPpxDreonQF
ROfeG0F7i493BsvrdzOrt8yLBVnsCSOl3NWopHM5XcyFHtb3OET2aqo/dyHYUqa9
ocEMw8+8iG+QRfufbxcXpkqnw/GZMsgM7ZHuIq2/njLuJJPAhGjqgYrrGRWkzuKQ
tev6m0F75EyRZ7x27qXxHtsG1SZqLYXKNdjea26mBZViqx2iVLvEzTXHMItYMh3b
GX1Bytp7B8qvzrz6omLbXt7wx01VEZWoQSIjLKyZNGIhIZ+vEIgJAjH+B8QwCjkD
lca+9vkN3XJNi1Zx3ef/zRY3VkINONcSaQIOGcb72aHZpYBZU+fZkRj5yaTc1X9z
KboMPx9RvuvUUrfLrPkh5sXFHUn1NwQpC7J7H2iJ2q53qvyhkfZrSFJegaLHNEX+
Dtfm9ftVgFqfsle9kgTC2hJW/2ITzXq4knAluJJ7wapZn3Q4bGpWjwQjvmRsQP37
2xmFnCKZr25z2rHWauLrDQZzakVub8jVURjzo10d5fWbuXl5i8TbCT5hv5oHxg4T
1kQIDXG9vQu/dRMg1TlGHy3Htb7COXXWzUuayUdxEWHI1voDuUfSTu1z7bUyVNGs
JcbWE6OloHmFlhq1FMPzdT5622CQON85AYHKI/+NjAUNuSKscPxd+MRjGNpgBTDg
QN+th6lxjrlaL5hIGx2vWZGrk7cZgV0ujTV+royjyW2LrUQL5sePXQx5iOxO0doC
uGpXAGTQgNTF1M5R2IOlWPHFOr253s2aNfixPFw8qJkdg1q+BAcFaKDBcVwSTVVf
sHEK/3diztu4KWLH9Hb9J3WBPCjZn50KDNg4hxJJRpNEtklHnjLyhDR4Zt3rANWF
oa8c+6qV9stz7IkxFRnmyqF6bZR6FSiUHeBodyttJ2enWfyXqWc3yv8Gadj+3WEA
BDBEcXeAYRduhG2ZXAKsoVyXpl01WDZZtHp2281HpCiM1fHxALWh/UfKePy9wNSl
0LoL/OjXsn07B0YjNxtUhuB/2uiVJ0pN24T7heIBf+snegAZ28zGUpy3+CIZjDj5
JKu5gZ6ffdenf+0R9E7OIKd2mv43i3EWmB+wAUYcZhtWaIalx/jbMTvDnmLdlZZ6
/Nt6etguPh3k1MWfW/0DLGM98u9vcfK5jJTHIBtH7bcQBVHzfWMUi2T0rCzpdNC4
Go7q4XfvV22vFXXVGTx0SpBqwiV/PsBb23PrjKD5VZjwyQ/UQA5EJ7TGs73Owy8W
pETO/XvQFdswqGRGR3DerVFz5PvduM8QvY2Zl7y5GX6ikFjftMMEY3pH5w59/RqM
ttCEAzO3vPkt/6hc1kkYPQsFeAPMhLSW//P2dFs4j8+tQJI0IoDa4Zlehcgwj7qW
PF62buevvsrwHmg3ehwpqbvX+BWg/qOofsTT7cs1AkXwfcq7Llsbz6jlXbOcynu/
pnNmkXPhz8f0lnffPo/OL8uPU4C5O7amdFzDYYw3hbacTv9CLnGa5on+Xf1oo2W+
nZMoW8AtkPeFULuz5rFybeUQHlmlUCgF0KccplhPr8EIwHfx+zdfGDRtBLJ6oR3E
H5QXAeyisT7PCgyc6NKKLoSMWLSDCW4n1C3ZK6EWO8Hm96of2tWBjy9dkf5jIhao
ualaTEA/W5zkyHfl5Xn6/UCGNYJcJ96pYdO6hGO6xUFGmi43ch0NXSyJYUoY7HBj
OlM1xWIKSBTQj0fswFblVocAZ4+3MRTBha4q3GGjMd23LtpJaTp7koOlkzum41we
4TTh6LdWwZFQmE7WqGPBJxlFwQYcDJ1nxBl8fQ+BCfpaAi8ziXhoU+DeOlMc1Shd
6DWPF2dQ2KzdiYXVxTIN6Ps67TNuN5Ndwh9d+45VDdnbtD8UiDNjFvgYeRVY2tHY
Fx0r8gvTJmgZBHMF+0eYs4auHBPl9QO4xSb7Utyg8Vfunn7mdXusXWGsFi48gyDy
koeQUEtPCoivRCSqJNT0F1R/PsBixBBLwkETbIgj87/n9fZpqxqEgHSmTPFSBgAs
ou5znfL3cSRkLJOScAwbcSbdS1BSgMZvDqEZH6VzQH6ZfHktNY8RcVb4pq6MMBEW
qH9bkhvs0yjAb4jLdR/YqMlZJPgJMcSD7jHEf/M1eYjwMeJULFqgZBvhYPo1NzG/
hBr9VD+fwtokrsHhn7pavqVo4kYfC7iybD2G9gtEYNY6PU4O5vn918vB2viMk2X2
4yul5Gk1nqonv6LklJ/siUq9zj8159/lOUNmyjamnpLl73+H//y6WtKGYtDROPd7
fn77GP9PSHbhOReErGsg/aXiWeesuY4sUIGfcTjx0qi9u9gEP37vwyaABsf7YYgg
dkOMwAHEUJ0QWJUF0YSlOw1DKcdRoCDKoY2oIRe56Y8nXvamoGyTaOjOoHQNwF9e
Tm7suWF8EQP6ifnugHOv55xvaJC3es3yw+9lrW+za/i/90FgRs0tFd8BlghCAuJ3
RVwB3lpmMhX0sDP9YNN7EK3U4i8snC+cAUzLHQMsag/FNIOCx0Pjyc48hkSlhZiS
jLc2fjiZeUo2QrTZ6rWjlXJ7c1UiwKwPar33OA5iEmoyPcHV5a6FTrfMSS+zY2rX
kLIP3XZcBN1Hpujm4lVBUI3xHdX2d5PT0Ky3HSKzoHtezyiipki06u6G/A4X32WV
alYkQXRhIohnMaEVf9BRWnYcH6592I4nrmTCSrZLEs2alU18awtfRYHHGMPoP5m/
zJdukSdyjRNT37ZKPQM85NEMXKmNKHu5+0nUrOntN2hxwFrmOk0avVrVibaSAXqk
fldPfep9XIsQaVxdRr89NykUSvTYU0/glCLJPc/wdGCqxBQYAbcGFTtxjVVkSH06
yCx1hoMcakhNG8h7b8mN3oz67T6lukrnxVID/xd8s4MvYc8/2PnCYwM3AH2ig5M+
gpJCcnh/5MR9HlnRAxbdSjkQYnLumIovxebfBCvglvE2LRwcV+/dO+15AbHlwp0u
PMVXZ7aZjF0TypBDbCP1o5mWsJ+9RQtKG7JP6fyhzElZTnjQXonBXCk4OuiafuLS
KBbG/kEgCbGz0NSIhL4Ao+zD/oz9goqoA5TtOeHkluO3lNgjWBXkFioWHVtqN4Qd
7csOzdiVGpwwHJ9x0HtoxzhFWle+MhAREXPb+rlLSwFMEjHhdPkrkrjj0EyHpdsS
DWFBIxF5IZS4zwX/86ThpSrdkLwADPbPJja2LQSsi73yLc7ql9SGlHupqQw1rSx8
YgkrASvlGdWhEqF4KuoAUv/j5ZDp5u4k3psVwqzmZEfSKIzY5rqE/2Yy69m1WPIg
AV4YIhlDc7dGdqaZ5CtVTXqgDOUjDmNSLuAHXIkzZHv1XSmjaILQhh50w9omL4do
q+vyE6vfaqQCEnbgXy3z0G3RT4UCY0P90ukaIVolfVIzNcPUGt866P7UlwHxePJ3
eDR5YXdhqds3MJAKOibhiR0HH7QVDtazzHndpDNBV+2bPL4Ht1LYKCIy7utAIuPX
m4W7M8iWMhrL9wvASA5W2WSchqChWvfHpE10OkeFDhFTijomKXewrHcZzNCLWHYU
JFF3lfkjEXMfPPtJo8WwBCB0G6loJz4b78OVfDh3DriMSzWf3MRNLtonnUmLKqUL
qdPgvUmGcn1FnZVFhlFuKbQ8uJjpWrdLJblR59S3eNdJWOYrBv1VJa5fVFcG+orm
LSonfMj3/E9YCMCKKdpF+JWUnFxBSBUNfPCHujUkURvB56hSBwXE5iuiLvygCE5b
b/RNzrUu/3CzOGmoBxxMyNeAHK7Ul/T2JZ3EFJ89aS1T+n7wE+s0dwRVVhKPXknY
y3UqBPx756QDkVT0SW63mLNo6vt7t+/Ubh7SlkYvTqVt+8eSjvY3lmbbC2pKPgI8
CL3gts7tPIbnNBSvMCEfUJniPk/OGdE1W3TA5WpAUpuygBTdV6rv7JvYBfR3rbiJ
A3INpHK1Vpj8/63KVlkivueQuP1stCiYGEG6XAYbcMKljWYHVSiW6OwM7UAdzSxN
BDVvRtOnkhW37BweAtiXln4RgVmb97GYKZnoa5EK6DyDq73S1fAqx8G/L04cL0Pe
Uav/s7a5x72YfOu8cTDRRqxJVG1xy3kTflWtHoNdwnqI/nfMjjU5BYSaj/yaBcfm
PgmhSLekPOgDcyQAMsRT031z/IB73rv/Yn3wIpUcpuZin08r7NeyZydyd0TQpCFS
mUuNch6EEqzeqExB3k1j2es3orIcDkxSYkaxb3/Rj0JU4tjEh3gkeNEzpVPBoDj8
To7WffXoRdsomQYMaO61JKUY0dMBsnx1AiOVIgl3CqoS4ZP0pbdfUjBJEZMVrwnm
NuX4IHkQ2n04IXmtMwMJjI+9Q+MkFOQkd5Me98JLTV52WUWAGHbIk4bsGfGcSO+j
RJm4wZ8gBRiNJ41GI/GdztQgtLTrirLkv6nP8sZoAmvW3t8LDVcIJ4iv7/TDPri6
VSt9PnMMV5Uj32qshiVOTGzwcStm41o68zDkqzsJALLJqx8lmtkwnVuUiE0I2Tak
54FAuNLnOUUxIrAoWlPaxYbBWezDOPHfwGhd4qMVHMxKBi8o7RFnq2jm+/SSZ9q/
3+8tlSH/SCg3VYB2cd0nUGyXBidPa8wrUVuBJEdozRT8DjTaj4LZPK9+kCiruFKc
aTrtM61n4hHWK4hIcSUVB5zE6zoNSlQQwoNpJ6jyxGD7TeTtIPr7MZA6ES2/U4Je
2rZfqx64V6l1zeoruRq+EJ2v0/iZiCF+lDjUuwCS97g3pjDOAx9NBOW125lg7lgO
KV8owJiMwNYDMYi/bIlz/UZc1TfPb4iY4Zh4x0UKMMymWnefGmHqvBq+zCgpQZFX
6amPXbsnY8YrBedJ1wVs03JuLnQyElMVhYQl2rtioZZ0+iwb7oz6KeYayoH+WLoA
bvX19q3YQsRwrb15CoKzBqumIb50j9Skm/mDcakzIebEEwYr5ZGzxN+Npy6gHf4s
ZhY20St9QjzumoSj7T2PF90YSBXtOfKehUDhtNAJE0QpARSOONVqlsUm63H9NMTL
m1BZCSMOcz2H6kbnNg0R82KsLiWIfzXEgTSbo/7v2ZGyTBQOTYyoLjS/ukPiUV7q
b7QBPUCZzhDdTGkA0ylruyk8W9TCgu2juTUJOnWZiewrRVmwtWKcVpkzHVlDFV/M
LLbDa4G5ZtSrBHFUDka4Lah2+J7DMUXCP1EEax0Ms6qwWaUGH4Gik7UcX+CwSUdy
aFm0FfKVWFUvnqohHq3rAyvMwmI1vT9ONST3ABZCh2LedZF89yUpGHKVKrK7tDeA
gpSWH2/lDeuLfFIKw1gPfJGoLUn6IrBpU3ss9axNG5c5ZxGZT0WypJ4jt9tP7JWg
g4wO8mpJvUBGXHVv38ZSwHlVBuWWbGLnkPU2J1GcF8YLecB/XlRINqLfBNH8rkyI
6Jm31XX6cBTK+9P79K5Vng8QzycqyHQ9D0w3EMSpa79tPDJJ4Sn1KHUeqdQa8v2c
+KAfz6hfckjj26MujylcYUH4OOz8Bf+7481pnL8PJcOd+twoGEP3FmNSJQUwbHSF
AyZHSAb2Cq95xvwsrbJnmI5O60eK/G3/nghUl+pq5GRz4KSCnV5f+IU2a0sm5k5X
BcSRJ/8V8pdsAYf/LrBidjV3FnwBu9L845uIjeuCswzGizxsNE8Abu91UsNJprce
QQvk1dGDd7EbWownYz1HvqfzDSiN4AqBisFf+wThB/v0hf0Gg1lOgbC23NDAabCH
GT+h9PRMWdPuMZkzvcI6T5S6B2yuzvqWFfCKhlSJPP+7FJNGv6a3mfMyzRAb3LWX
jGzwMsHTK4ZjsoFzn+F1c5xElMoAdjIVIsA0obloSUZZoLVrPP5c4s6UgKEPy8cL
3HE0P8g3JxwkcqxYifuD0Fsia9u02JiPyR7RwoH6jhoJSC1lti1DkYgyQQDfN8wB
SogBBqIS7eWaWiiwokTMMjvPZaoZHydchxOOMMPCjtFn6zR8VvXvIyjK+UT5r2Wn
h0Ccffsnl5vjNiXYSdwM71HRaJqbrh/H6fANkhKUlu1Mq7i9U6YCJhgawGMbi+wH
33R1pD0xpp2eXe9TkDepLvB8khEwOXDcDYixKoPQHPBrgQdlmvs2bXGs/b0pL0vB
cORhA7zgIClQpiPETyJgbXKyodPaYzSVMFc4hKPza0tvtinvQI2P4L1FKT6uGaCx
brBUNn9OaysT9eAbQNgf8/zraFgtgPYtKv8O3Yc0q4IusyzCnFJDq0ljEVl5ecn3
oLn40mRRbQvEdkrq7FgcDGe9mJIPycFR2FH62e1lFzLgH2wAVec9QZSBOqJQJyE4
fIFrpkK19Xjn9N1Mpbu1BFj2zW0f7VEnmeWFKhilTLqwBrwYMCWkbgFb8Cr4mwG2
5CfoYKtY9EWh8M4sBXt+3jOw9toh+Igt2adTKgmo+v7wXZx4E7OCPNsZ07V9V5io
NvY90nG/W/d6jb/Gy/j+qJzUafR5LuFzkyiOaUM46Y2UmT7JouBTyatf3mAt7Vfp
ifMWL7A3ZmepT+faRbvBcGdDkpBGxoAk7zcTIcsJ/D06f5jtfGT6wcaEzhA4xujd
M9QOC/SHCxVRSYCxfxZoH/aGjBxsi1a1dCzrshUvCYWpw1Jk97ZX2gQDCv7yzOC/
b+8myoquvJXdwzwA01H3vlVfhBFkW86vwit6V/YdyJtAHZVn8DYD0ja7rzDnDGCB
prPQ33lXUtrRwcZIcBaCdE36eHdcGlxzVkiMccCz/7r3hKtwK7FtM8Ixyf+qr5GC
zfxH6v7Sa/Hpb+HgU2vbQctYWsARoTUzV8gcUcMLtAoO/zw9qyl04/66LO3kYkF2
+smefvaoFgItYZV5XGES+eOjL+PpLLoltEu4e+DMHyPonX15cH/JqV/vG3Ny0zF9
P+B9iGi7oiLK8sY6k7Q97YB7QnwYGdqyIWofdCkbwXVolXA0f1Eca/hRkVq3YGEY
U330ytn4hUarQU2KB6GH4VyljMXwBJDvAXrubBpTGgljekH2YXLl5LYn4kBdqnM2
tEcciBLhHJF2p8DNc8C1294wNizulWMyS4qd1Xqecrb+jOooxWTNehMheCd9obMx
9Esko2tyiUZ2Fe2Pptvq9MSzf1FPFm9KJnfVHA+SnuvvhlLB0sDJxGcq3mM1iwIE
4XisjRAOLlcNGieGN8IsgUVJ+geh0NLHJyb/JEk36xgmQbfohNuZZ4G4pQ5MbSk2
F4A/QpO8qeyO0DK/jZPsTVS4DMVtwK5kyqOa57kfuXVPVkCL1/ikqDfIICp4TNPZ
9lDkCE1VWwxKj1yS8mJhp/osSJrH78RVbj7sFgMgXftNH6K0l6Z14asVfXe0QjfX
qTMghWbY0yqieh7yCGaoPpp5822Ab65cosBnjYD7Jn2C37iwuPq1Xvv0UXcFLaoj
G9fAqSX5PQW6cj8w/ASQ/rs01QdAHMay2P6ct067Kts+dRO2Cnm8S2J9GxS6/MH5
rilCxHiFGBpMpT12F8Cm6iVPVjb0mEJn/CGYdy1UALmmkXI1jMdEE41a9178EtOk
NuH24UCRzjcXTNZOquzaboEhQ7LnihMLVSCeCcvBUdT+Fam0eTxKND/GL9UAle25
vCu3T2wnDZdpH4b5Eq4Pwy9q/2ci0RF1CUYJQYPvXBH5Lnx5s11CbgpNFpXXCMJn
nR7XEk7+U6SxMkL2gj+OTsRT0yv3aWrOR0T829quzHp2vLKweKkdYOwNZfJFk5BV
vD2pVcy9R5WZCw5Xh1B7b2gorj+S6rAaBdlgQI+ci1XCznPSPkJzjyo03/f8+yty
15S+RFnOHGYbJ3bHs+4EAWTw9106XkD5+GJ2YcgSO9v1hJ3UGaj8t79EBbb2nASp
bKj4q8UsymtZHn7NIGF63z4qp1o6O+IvBr3trznzHGRQbglIkBdr1vyHeppiA6ac
htt4zi4oc3T/uA6BgygvlvqlAqSJcIrGEc+c2Xik4JL7Kr0j3dCog/WJKj9pa8Df
coCM3hlAYyG6ig7EZ5ME6dwh2SortoBgiEw3lKucNFnl+wcYTr1SbGeGii5cG1k/
962zNEtyyq6OTVXZIMrO+fb7XPX/JCaMtJxHpKsaFd+FGf1asMuGETOd/bRvn/Do
9jtLcZ9B8xLUQa81uYHrso6maaO6hja7X1Qku5NvkCPm1fjX3ADFqi5l3KXMhCXT
AK1Fg9rVngKRHv48mjaRH71kZOeoo9Oh3Z8lYOZ6RCTE3l5AsWPM/eEP9I4S066v
oJh+IimI3TZU19fIUbYenje3EJdEtPipNqxnnKuTMPICd/B0noXgM3N5qJwSG4ra
QLO72yq/qWBIuNREzlWaWw971P/u+5f2q2xiETNGCv0G5mTzQFWSrI+33LseD+su
7Dfdi/jfmG1B8N6ZwOkucAXFK9xdqPCO4nMKUWwIVpfl1znweRV/h3bT3BD4pDq+
iiUe3GsgZQrticpG+qeIoYHB5OWzpVpio0AfBdXMW9FrOEtz5uQEBgZmltqeItyd
bEZZKO/tCWHXe1BavtKhGyElyY89y486YMcc7tGya2wAb6jwQWMoS++T12kGdhXG
IH0g1Of3xbrsP8yFLOAAuPcjZu7x8yochN/sMj4zCbZ20JggD42qxUekTZb6kvZh
bxiaFD7qw9snN0hEECGwyCwS+Ku2Z87o++I15K1DQ85aV096yVqnjsEIRMGBGHXT
LL8WsKDsubPi275XzCInLgOvD+brhczU1XnoT7xu6LpLJqrk0b4EAlpaYivsBVPz
xisgxuf/iEhuWFAoApdbOMvHADRUOMCZFNT6KOw0UI7XTrl/DrQYGntVvR2D5V97
`pragma protect end_protected

//pragma protect end


//pragma protect
//pragma protect begin

/* Encryption Envelope */

`pragma protect begin_protected
`pragma protect version = 1
`pragma protect encrypt_agent = "QuestaSim" , encrypt_agent_info = "2021.1"
`pragma protect key_keyowner = "Aldec" , key_keyname = "ALDEC15_001"
`pragma protect key_method = "rsa"
`pragma protect encoding = ( enctype = "base64" , line_length = 64 , bytes = 256 )
`pragma protect key_block
CkDaGnGc0bbPAUHENgaolNdxYNqCVLEwsjKmXCVyAf6mR2xXzWlru0BhrTzA3l44
o5SuVtTcIP3hZpAq0mpz+ulltXh/EThLdlb0FAQJnVUO61Fjqh1A/XN+bBNuOrBd
UzQz05TKWbxumvWLgPkResj3BVDLQuWTX5sTXDIW4XspKK9jwru9axcZmrAScKG3
6Eru8OPLIOB0dO6eCN3QorQgzZFjTXFLCfxJf2UbxbSsgd384H3ug1vJxcKBrlPi
dA8/+U6gI3+r01dlZtAOpIVvI6qX+kjLgnqni+AjAU9dCIkBeal8XkGl+DkbQoks
nCYW7emWkgwh+BwcChrRxQ==
`pragma protect data_method = "aes256-cbc"
`pragma protect encoding = ( enctype = "base64" , line_length = 64 , bytes = 3040 )
`pragma protect data_block
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
74WS7fc7qqglbC7Pda2XnQ==
`pragma protect end_protected

//pragma protect end


//pragma protect
//pragma protect begin

/* Encryption Envelope */

`pragma protect begin_protected
`pragma protect version = 1
`pragma protect encrypt_agent = "QuestaSim" , encrypt_agent_info = "2021.1"
`pragma protect key_keyowner = "Aldec" , key_keyname = "ALDEC15_001"
`pragma protect key_method = "rsa"
`pragma protect encoding = ( enctype = "base64" , line_length = 64 , bytes = 256 )
`pragma protect key_block
Ly10cEFmpJGqbQ0ODe3XfUYlQU2fF+po09xTKFq0UPNx7NL+gJ+sWKYaThdVTcJY
uVDDphCBC7hmfQzqi/Ez2zoqIHraN7ZaF7zzGvsSK+8zEAshLZh/dXzRTYUCW4ZQ
eZ1AYAGhprKe0eapCyhAc17yIup2v99QUu+pkogbw7Q2ist2dwC1xUSY2UVfAPcI
SFJ5Uo9sio8AkihkUDBPtG0D0L9L8zogdKBbB/8k4Fd1sm8eR1I2QAMZmhYkUqOu
5C6spWFWhT4VL4VnMTP3TbljfqZUI7f7PlwnYP7mNTdvj395clFYoyz9PUIAKv32
hifqAMMq93eTCYQz8eKRxQ==
`pragma protect data_method = "aes256-cbc"
`pragma protect encoding = ( enctype = "base64" , line_length = 64 , bytes = 7808 )
`pragma protect data_block
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
`pragma protect end_protected

//pragma protect end


//pragma protect
//pragma protect begin

/* Encryption Envelope */

`pragma protect begin_protected
`pragma protect version = 1
`pragma protect encrypt_agent = "QuestaSim" , encrypt_agent_info = "2021.1"
`pragma protect key_keyowner = "Aldec" , key_keyname = "ALDEC15_001"
`pragma protect key_method = "rsa"
`pragma protect encoding = ( enctype = "base64" , line_length = 64 , bytes = 256 )
`pragma protect key_block
sNPd6NHirihc7Z9w33sjb1we7ZKa6DsbeRt7/rLt9eS0vId+duESnF1zmSDnu8u3
UeqG2uUxnF/NqDu7m+VDqZVpkPMLz1VSMYcMDZATgOjuVSp+Vl4+ZPfI33xmUM7B
F+RJyywbWJc88lPMguY9zmmN+W272ygIJy9b/d6y2B0xoV5vFpxVdeKKeakNdeA0
wsWlxI/y7crAt3px8dEpk10y2E0GPSmt0EZPiB9Yv+3PgPjBB5msMZCcSsRYxRg7
5WPufJvDW6YmLjdm0DCjjjVIDGrPvyZeqPi4++Kks2aiV9jYpvyMeipR4324RCnN
XVuk8IxrzbNfwUaImCg6Gw==
`pragma protect data_method = "aes256-cbc"
`pragma protect encoding = ( enctype = "base64" , line_length = 64 , bytes = 2768 )
`pragma protect data_block
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
`pragma protect end_protected

//pragma protect end

`undef IP_UUID
`undef IP_NAME_CONCAT
`undef IP_MODULE_NAME
